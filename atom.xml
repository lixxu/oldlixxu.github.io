<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[杂七杂八记一下]]></title>
  <link href="http://lixxu.me/atom.xml" rel="self"/>
  <link href="http://lixxu.me/"/>
  <updated>2015-04-08T11:44:32+08:00</updated>
  <id>http://lixxu.me/</id>
  <author>
    <name><![CDATA[Lix Xu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PostgreSQL 中删除重复记录]]></title>
    <link href="http://lixxu.me/blog/2015/04/08/remove-duplicate-rows-from-postgresql/"/>
    <updated>2015-04-08T11:20:20+08:00</updated>
    <id>http://lixxu.me/blog/2015/04/08/remove-duplicate-rows-from-postgresql</id>
    <content type="html"><![CDATA[<p>来源: <a href="http://stackoverflow.com/questions/1746213/how-to-delete-duplicate-entries">http://stackoverflow.com/questions/1746213/how-to-delete-duplicate-entries</a></p>

<p>有的时候我们对一个表不会加唯一性限制, 而是在插入数据时进行检查. 但有的时候程序里的 bug 导致还是有重复的记录被插入到数据库中了, 这时候如何快速地删除重复行呢?</p>

<p>显然, 用程序来删除会比较耗时, 尤其是记录比较多的时候.
以下的方法只适用于 <code>PostgreSQL</code>, 因为不是标准的 SQL 语法.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>DELETE FROM table USING table alias 
</span><span class='line'>  WHERE table.field1 = alias.field1 AND table.field2 = alias.field2 AND
</span><span class='line'>    table.max_field &lt; alias.max_field</span></code></pre></td></tr></table></div></figure>


<p>比如, 有一个用户表, email 字段本该是唯一的, 需要删除重复的 email 记录.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>DELETE FROM user_accounts USING user_accounts ua2
</span><span class='line'>WHERE user_accounts.email = ua2.email AND user_accounts.id &lt; ua2.id;</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转] Quake-III 代码里神奇的浮点开方函数]]></title>
    <link href="http://lixxu.me/blog/2015/01/27/john-carmack/"/>
    <updated>2015-01-27T20:05:42+08:00</updated>
    <id>http://lixxu.me/blog/2015/01/27/john-carmack</id>
    <content type="html"><![CDATA[<p>源贴在这里 (也是转帖): <a href="http://www.douban.com/note/196653073/">http://www.douban.com/note/196653073/</a></p>

<p><img src="http://lixxu.qiniudn.com/quake.jpg"></p>

<p><code>Quake-III</code> 代码里神奇的浮点开方函数</p>

<p><code>Quake-III Arena (雷神之锤3)</code> 是90年代的经典游戏之一. 该系列的游戏不但画面和内容不错, 而且即使计算机配置低, 也能极其流畅地运行. 这要归功于它3D引擎的开发者<code>约翰-卡马克(John Carmack)</code>.</p>

<p>事实上早在90年代初DOS时代, 只要能在PC上搞个小动画都能让人惊叹一番的时候, <code>John Carmack</code> 就推出了石破天惊的<code>Castle Wolfstein</code>, 然后再接再励, <code>doom</code>, <code>doomII</code>, <code>Quake</code>&hellip;每次都把 3-D 技术推到极致. 他的3D引擎代码极度高效, 几乎是在压榨PC机的每条运算指令. 当初MS的 <code>Direct3D</code> 也得听取他的意见, 修改了不少API.</p>

<!--more-->


<p>最近, QUAKE的开发商 <code>ID SOFTWARE</code> 遵守GPL协议, 公开了QUAKE-III的原代码, 让世人有幸目睹Carmack传奇的3D引擎的原码. 这是QUAKE-III原代码的下载地址:
<a href="http://www.fileshack.com/file.x?fid=7547">http://www.fileshack.com/file.x?fid=7547</a></p>

<p>(下面是官方的下载网址, 搜索 <code>quake3-1.32b-source.zip</code> 可以找到一大堆中文网页的
<a href="ftp://ftp.idsoftware.com/idstuff/source/quake3-1.32b-source.zip">ftp://ftp.idsoftware.com/idstuff/source/quake3-1.32b-source.zip</a>)</p>

<p>我们知道, 越底层的函数, 调用越频繁. 3D引擎归根到底还是数学运算. 那么找到最底层的数学运算函数 (在 <code>game/code/q_math.c</code>), 必然是精心编写的. 里面有很多有趣的函数, 很多都令人惊奇, 估计我们几年时间都学不完.</p>

<p>在 <code>game/code/q_math.c</code> 里发现了这样一段代码. 它的作用是将一个数开平方并取倒, 经测试这段代码比 <code>(float)(1.0/sqrt(x))</code> 快4倍:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">float</span> <span class="nf">Q_rsqrt</span><span class="p">(</span> <span class="kt">float</span> <span class="n">number</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">long</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">float</span> <span class="n">x2</span><span class="p">,</span> <span class="n">y</span><span class="p">;</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">float</span> <span class="n">threehalfs</span> <span class="o">=</span> <span class="mf">1.5F</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">x2</span> <span class="o">=</span> <span class="n">number</span> <span class="o">*</span> <span class="mf">0.5F</span><span class="p">;</span>
</span><span class='line'>    <span class="n">y</span>   <span class="o">=</span> <span class="n">number</span><span class="p">;</span>
</span><span class='line'>    <span class="n">i</span>   <span class="o">=</span> <span class="o">*</span> <span class="p">(</span> <span class="kt">long</span> <span class="o">*</span> <span class="p">)</span> <span class="o">&amp;</span><span class="n">y</span><span class="p">;</span>   <span class="c1">// evil floating point bit level hacking</span>
</span><span class='line'>    <span class="n">i</span>   <span class="o">=</span> <span class="mh">0x5f3759df</span> <span class="o">-</span> <span class="p">(</span> <span class="n">i</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span> <span class="p">);</span> <span class="c1">// what the fuck?</span>
</span><span class='line'>    <span class="n">y</span>   <span class="o">=</span> <span class="o">*</span> <span class="p">(</span> <span class="kt">float</span> <span class="o">*</span> <span class="p">)</span> <span class="o">&amp;</span><span class="n">i</span><span class="p">;</span>
</span><span class='line'>    <span class="n">y</span>   <span class="o">=</span> <span class="n">y</span> <span class="o">*</span> <span class="p">(</span> <span class="n">threehalfs</span> <span class="o">-</span> <span class="p">(</span> <span class="n">x2</span> <span class="o">*</span> <span class="n">y</span> <span class="o">*</span> <span class="n">y</span> <span class="p">)</span> <span class="p">);</span> <span class="c1">// 1st iteration</span>
</span><span class='line'>    <span class="c1">// y   = y * ( threehalfs - ( x2 * y * y ) ); // 2nd iteration, this can be removed</span>
</span><span class='line'>
</span><span class='line'>    <span class="cp">#ifndef Q3_VM</span>
</span><span class='line'>    <span class="cp">#ifdef __linux__</span>
</span><span class='line'>     <span class="n">assert</span><span class="p">(</span> <span class="o">!</span><span class="n">isnan</span><span class="p">(</span><span class="n">y</span><span class="p">)</span> <span class="p">);</span> <span class="c1">// bk010122 - FPE?</span>
</span><span class='line'>    <span class="cp">#endif</span>
</span><span class='line'>    <span class="cp">#endif</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">y</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>函数返回 <code>1/sqrt(x)</code>, 这个函数在图像处理中比 <code>sqrt(x)</code> 更有用. 注意到这个函数只用了一次叠代! (其实就是根本没用叠代, 直接运算). 编译, 实验, 这个函数不仅工作的很好, 而且比标准的 <code>sqrt()</code> 函数快4倍! 要知道, 编译器自带的函数, 可是经过严格仔细的汇编优化的啊!</p>

<p>这个简洁的函数, 最核心, 也是最让人费解的, 就是标注了 <code>what the fuck?</code> 的一句
<code>i = 0x5f3759df - ( i &gt;&gt; 1 );</code> 再加上 <code>y = y * ( threehalfs - ( x2 * y * y ) );</code> 两句话就完成了开方运算! 而且注意到, 核心那句是定点移位运算, 速度极快! 特别在很多没有乘法指令的RISC结构CPU上, 这样做是极其高效的.</p>

<p>算法的原理其实不复杂, 就是牛顿迭代法, 用 <code>x-f(x)/f'(x)</code> 来不断的逼近 <code>f(x)=a</code>的根.</p>

<p>简单来说比如求平方根, <code>f(x)=x^2=a</code>, <code>f'(x)= 2*x</code>, <code>f(x)/f'(x)=x/2</code>, 把f(x)代入
<code>x-f(x)/f'(x)</code> 后有 <code>(x+a/x)/2</code>, 现在我们选 <code>a=5</code>, 选一个猜测值比如2, 那么我们可以这么算 <code>5/2 = 2.5; (2.5+2)/2 = 2.25; 5/2.25 = xxx; (2.25+xxx)/2 = xxxx ...</code> 这样反复迭代下去, 结果必定收敛于 <code>sqrt(5)</code>.</p>

<p>没错, 一般的求平方根都是这么算的. 但是卡马克(quake3作者)真正牛B的地方是他选择了一个神秘的常数 <code>0x5f3759df</code> 来计算那个猜测值. 就是我们加注释的那一行, 那一行算出的值非常接近 <code>1/sqrt(n)</code>,这样我们只需要2次牛顿迭代就可以达到我们所需要的精度.</p>

<p>好吧, 如果这个还不算NB, 接着看:</p>

<p>普渡大学的数学家Chris Lomont看了以后觉得有趣, 决定要研究一下卡马克弄出来的
这个猜测值有什么奥秘. Lomont也是个牛人, 在精心研究之后从理论上也推导出一个
最佳猜测值, 和卡马克的数字非常接近, <code>0x5f37642f</code>. 卡马克真牛, 他是外星人吗？</p>

<p>传奇并没有在这里结束. Lomont计算出结果以后非常满意, 于是拿自己计算出的起始
值和卡马克的神秘数字做比赛, 看看谁的数字能够更快更精确的求得平方根. 结果是
卡马克赢了&hellip; 谁也不知道卡马克是怎么找到这个数字的.</p>

<p>最后 Lomont怒了, 采用暴力方法一个数字一个数字试过来, 终于找到一个比卡马克数
字要好上那么一丁点的数字, 虽然实际上这两个数字所产生的结果非常近似, 这个暴
力得出的数字是 <code>0x5f375a86</code>.</p>

<p>Lomont为此写下一篇论文, <code>"Fast Inverse Square Root"</code>.</p>

<p>论文下载地址:</p>

<p><a href="http://www.math.purdue.edu/~clomont/Math/Papers/2003/InvSqrt.pdf">http://www.math.purdue.edu/~clomont/Math/Papers/2003/InvSqrt.pdf</a>
<a href="http://www.matrix67.com/data/InvSqrt.pdf">http://www.matrix67.com/data/InvSqrt.pdf</a></p>

<p>参考: <code>&lt;IEEE Standard 754 for Binary Floating-Point Arithmetic&gt;&lt;FAST INVERSE SQUARE ROOT&gt;</code></p>

<p>最后, 给出最精简的 <code>1/sqrt()</code> 函数:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">float</span> <span class="nf">InvSqrt</span><span class="p">(</span><span class="kt">float</span> <span class="n">x</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">float</span> <span class="n">xhalf</span> <span class="o">=</span> <span class="mf">0.5f</span><span class="o">*</span><span class="n">x</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">x</span><span class="p">;</span> <span class="c1">// get bits for floating VALUE </span>
</span><span class='line'>    <span class="n">i</span> <span class="o">=</span> <span class="mh">0x5f375a86</span><span class="o">-</span> <span class="p">(</span><span class="n">i</span><span class="o">&gt;&gt;</span><span class="mi">1</span><span class="p">);</span> <span class="c1">// gives initial guess y0</span>
</span><span class='line'>    <span class="n">x</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="kt">float</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">i</span><span class="p">;</span> <span class="c1">// convert bits BACK to float</span>
</span><span class='line'>    <span class="n">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">*</span><span class="p">(</span><span class="mf">1.5f</span><span class="o">-</span><span class="n">xhalf</span><span class="o">*</span><span class="n">x</span><span class="o">*</span><span class="n">x</span><span class="p">);</span> <span class="c1">// Newton step, repeating increases accuracy</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">x</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>大家可以尝试在PC机、51、AVR、430、ARM、上面编译并实验, 惊讶一下它的工作效率.</p>

<p>前兩天有一則新聞, 大意是說 Ryszard Sommefeldt 很久以前看到這麼樣的一段 code (可能出自 Quake III 的 source code):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">float</span> <span class="nf">InvSqrt</span> <span class="p">(</span><span class="kt">float</span> <span class="n">x</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">float</span> <span class="n">xhalf</span> <span class="o">=</span> <span class="mf">0.5f</span><span class="o">*</span><span class="n">x</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">x</span><span class="p">;</span>
</span><span class='line'>    <span class="n">i</span> <span class="o">=</span> <span class="mh">0x5f3759df</span> <span class="o">-</span> <span class="p">(</span><span class="n">i</span><span class="o">&gt;&gt;</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">x</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="kt">float</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">i</span><span class="p">;</span>
</span><span class='line'>    <span class="n">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">*</span><span class="p">(</span><span class="mf">1.5f</span> <span class="o">-</span> <span class="n">xhalf</span><span class="o">*</span><span class="n">x</span><span class="o">*</span><span class="n">x</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">x</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>他一看之下驚為天人, 想要拜見這位前輩高人, 但是一路追尋下去卻一直找不到人; 同時間也有其他人在找, 雖然也沒找到出處, 但是 Chris Lomont 寫了一篇論文 (in PDF) 解析這段 code 的演算法 (用的是 Newton’s Method, 牛頓法; 比較重要的是後半段講到怎麼找出神奇的 <code>0x5f3759df</code> 的).</p>

<p>PS. 這個 function 之所以重要, 是因為求 <code>開根號倒數</code> 這個動作在 3D 運算 (向量運算的部份) 裡面常常會用到, 如果你用最原始的 sqrt() 然後再倒數的話, 速度比上面的這個版本大概慢了四倍吧… XD</p>

<p>PS2. 在他們追尋的過程中, 有人提到一份叫做 MIT HACKMEM 的文件, 這是 1970 年代的 MIT 強者們做的一些筆記 (hack memo), 大部份是 algorithm, 有些 code 是 PDP-10 asm 寫的, 另外有少數是 C code (有人整理了一份列表).</p>

<p>附: 牛顿迭代法快速寻找平方根</p>

<p>下面这种方法可以很有效地求出根号a的近似值: 首先随便猜一个近似值x, 然后不断令x等于 x 和 a/x 的平均数, 迭代个六七次后 x 的值就已经相当精确了. 例如, 我想求根号 2 等于多少. 假如我猜测的结果为4, 虽然错的离谱, 但你可以看到使用牛顿迭代法后这个值很快就趋近于根号2了:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(       4   + 2/   4     ) / 2 = 2.25
</span><span class='line'>(     2.25   + 2/   2.25   ) / 2 = 1.56944..
</span><span class='line'>( 1.56944..+ 2/1.56944..) / 2 = 1.42189..
</span><span class='line'>( 1.42189..+ 2/1.42189..) / 2 = 1.41423.. 
</span><span class='line'>....</span></code></pre></td></tr></table></div></figure>


<p><img src="http://lixxu.qiniudn.com/newton.jpg"></p>

<p>这种算法的原理很简单, 我们仅仅是不断用 <code>(x, f(x))</code> 的切线来逼近方程 <code>x^2-a=0</code>的根. 根号a实际上就是 <code>x^2-a=0</code>的一个正实根, 这个函数的导数是2x. 也就是说, 函数上任一点 <code>(x,f(x))</code>处的切线斜率是2x. 那么, <code>x-f(x)/(2x)</code> 就是一个比 x 更接近的近似值. 代入 <code>f(x)=x^2-a</code> 得到 <code>x-(x^2-a)/(2x)</code>, 也就是 <code>(x+a/x)/2</code>.</p>

<!--more-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Py2exe打包psutil]]></title>
    <link href="http://lixxu.me/blog/2015/01/16/how-to-include-components-of-psutil-in-py2exe-that-py2exe-cant-find/"/>
    <updated>2015-01-16T18:18:35+08:00</updated>
    <id>http://lixxu.me/blog/2015/01/16/how-to-include-components-of-psutil-in-py2exe-that-py2exe-cant-find</id>
    <content type="html"><![CDATA[<p>记录备忘.</p>

<p>原因:<br /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Traceback (most recent call last):
</span><span class='line'>  File "main.py", line 10, in &lt;module&gt;
</span><span class='line'>  File "zipextimporter.pyo", line 82, in load_module
</span><span class='line'>  File "utils.pyo", line 10, in &lt;module&gt;
</span><span class='line'>  File "zipextimporter.pyo", line 82, in load_module
</span><span class='line'>  File "psutil\__init__.pyo", line 138, in &lt;module&gt;
</span><span class='line'>  File "zipextimporter.pyo", line 82, in load_module
</span><span class='line'>  File "psutil\_pswindows.pyo", line 16, in &lt;module&gt;
</span><span class='line'>  File "zipextimporter.pyo", line 98, in load_module
</span><span class='line'>ImportError: MemoryLoadLibrary failed loading _psutil_windows.pyd</span></code></pre></td></tr></table></div></figure>


<p>解决办法:<br />
1. <a href="http://stackoverflow.com/questions/20930173/how-to-include-components-of-psutil-in-py2exe-that-py2exe-cant-find">http://stackoverflow.com/questions/20930173/how-to-include-components-of-psutil-in-py2exe-that-py2exe-cant-find</a><br />
    <code>dll_excludes</code> 至少添加这几项: <code>"IPHLPAPI.DLL", "NSI.dll",  "WINNSI.DLL",  "WTSAPI32.dll"</code></p>

<p>2. <a href="http://sourceforge.net/p/py2exe/bugs/130/">http://sourceforge.net/p/py2exe/bugs/130/</a><br />
    <code>options</code> 里的 <code>bundle_files</code> 改成 <code>3</code>, 不过打包出来的文件会有很多个.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[小米1/1S刷魔趣4.4.4]]></title>
    <link href="http://lixxu.me/blog/2015/01/09/mi-flash-mokee/"/>
    <updated>2015-01-09T19:30:01+08:00</updated>
    <id>http://lixxu.me/blog/2015/01/09/mi-flash-mokee</id>
    <content type="html"><![CDATA[<p><font color="red">更新: 大家不要刷了, 我的已不能开机了, 也不能线刷了. 老的手机就不要太折腾了</font></p>

<p>小米1已经是很老的机器了, 以至于 <code>MIUI</code> 都放弃了它 (最新系统是开发版 V5 4.12.5).
而民间的系统魔趣却有最新的 <code>Android 4.4.4</code> 可以刷 (<a href="http://download.mokeedev.com/?device=mione_plus">http://download.mokeedev.com/?device=mione_plus</a>), 于是没忍住, 今天查了下教程, 开刷, 这里记下步骤.</p>

<p><font color="red">刷前确保电量充足</font></p>

<p>主要参考: <a href="http://bbs.xiaomi.cn/thread-9531742-1-1.html">http://bbs.xiaomi.cn/thread-9531742-1-1.html</a></p>

<p>附上需要用到的文件:<br />
1. 小米1驱动<br />
    <a href="http://lixxu.qiniudn.com/miDriver.rar">http://lixxu.qiniudn.com/miDriver.rar</a></p>

<p>2. 双系统recovery文件<br />
    <a href="http://lixxu.qiniudn.com/ClockWorkModDualSystem_mione_plus_6.0.3.3.zip">http://lixxu.qiniudn.com/ClockWorkModDualSystem_mione_plus_6.0.3.3.zip</a>
    <br />参考: <a href="http://bbs.xiaomi.cn/thread-9531742-1-1.html">http://bbs.xiaomi.cn/thread-9531742-1-1.html</a></p>

<p>3. 线刷recovery文件<br />
    <a href="http://lixxu.qiniudn.com/mione_recovery_upgrade.7z">http://lixxu.qiniudn.com/mione_recovery_upgrade.7z</a></p>

<p>4. 魔趣ROM<br />
    <a href="http://lixxu.qiniudn.com/MK44.4-mione_plus-141223-RELEASE.zip">http://lixxu.qiniudn.com/MK44.4-mione_plus-141223-RELEASE.zip</a>
    <br />或到官网下载最新
    <a href="http://download.mokeedev.com/?device=mione_plus">http://download.mokeedev.com/?device=mione_plus</a></p>

<!--more-->


<p>步骤:<br />
1. 安装小米1驱动, 一定要确保adb驱动正常全装, 把魔趣的 ROM 和<code>ClockWorkModDualSystem_mione_plus_6.0.3.3.zip</code> 放入手机根文件夹
    <img src="http://lixxu.qiniudn.com/mione_adb.jpg"></p>

<p>2. 刷入第三方recovery<br />
    直接用MIUI的 <code>更新系统</code>, 选择安装包, 找到zip文件刷入即可, 刷完重启
    <br /><font color="red">注意: <br />这时候重启后进入的是系统2, 需要手动重启进新recovery, 新recovery里面有高级功能, 步骤如下: 高级 &ndash; 调整分区大小 &ndash; 500M</font></p>

<p>3. 重启或卸电池, 进fastboot线刷新recovery<br />
    <font color="red">(1) 网上说正常会重启, 重启后进入线刷模式. 但是个人经验一定会卡死, 所以显示刷机成功后重启, 卡死后大家卸电池, 再装回电池, 然后米1按组合键进入线刷模式 (电源键+米键+音量减), 也就是fastboot模式下.</font><br />
    <font color="red">(2) 再刷入新recovery, 用的是 <code>mi-one recovery upgrade.7z</code>, 解压, 执行 <code>shuaji.bat</code>, 成功后, 重启进recovery (电源键+音量加)</font></p>

<p>4. 刷入魔趣ROM<br />
    <img src="http://lixxu.qiniudn.com/mi_rom.jpg">
    <br />高级-> 打开双系统 -> 返回 -> 安装系统 -> 从SD卡选择系统 -> 找到魔趣ROM -> 开刷 (我的是系统2, 可能你的不同), 选择刷进系统2 -> 清空虚拟机缓存 -> 重启, 选择系统2. 大功告成</p>

<p>5. 安装谷歌服务包<br />
    启动后, 到 <code>设置 -&gt; 魔趣中心 -&gt; 扩展组件</code>, 刷新, 下载 <code>谷歌服务包</code>
    <font color="red">注意:<br />下载完不要选安装, 因为会装进系统1, 需要手动进recovery 刷入 (下载的文件放在 <code>mkextras</code> 文件夹), 和刷ROM一个步骤, 不需要双清</font></p>

<p>至此, 所有的步骤都完了, 进系统体验 <code>google服务</code>吧, <code>Gmail, G+</code> 就等你来折腾了!</p>

<!--more-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[改善生活的好工具]]></title>
    <link href="http://lixxu.me/blog/2014/08/16/good-prog-tools/"/>
    <updated>2014-08-16T23:16:27+08:00</updated>
    <id>http://lixxu.me/blog/2014/08/16/good-prog-tools</id>
    <content type="html"><![CDATA[<p>只记录, 不作解释.</p>

<p>1. 字体 (雅黑混合)<br />
    <a href="http://7ktor3.com1.z0.glb.clouddn.com/MSYHMONO.7z">http://7ktor3.com1.z0.glb.clouddn.com/MSYHMONO.7z</a></p>

<p>2. 命令行工具 ConEmu<br />
    <a href="http://7ktor3.com1.z0.glb.clouddn.com/ConEmuPack.140707.7z">http://7ktor3.com1.z0.glb.clouddn.com/ConEmuPack.140707.7z</a></p>

<p>3. 资源管理器 FreeCommander<br />
    <a href="http://www.freecommander.com/">http://www.freecommander.com/</a></p>

<p>4. 编辑器 Sublime Text 2<br />
    <a href="http://7ktor3.com1.z0.glb.clouddn.com/Sublime3.7z">http://7ktor3.com1.z0.glb.clouddn.com/Sublime3.7z</a></p>

<p>5. git 工具 SourceTree<br />
    <a href="http://www.sourcetreeapp.com/">http://www.sourcetreeapp.com/</a></p>

<p>6. 键盘 HHKB<br />
    <a href="http://lixxu.me/blog/2014/05/12/hhkb-pro2">有时候, 你总要犒劳下自己</a></p>

<p>7. 电脑 Mac Air Retina<br />
    <a href="http://www.apple.com/macbook-air/">http://www.apple.com/macbook-air/</a></p>

<p>8. 显示器 DELL u2414h<br />
    <a href="http://show.smzdm.com/detail/64119">http://show.smzdm.com/detail/64119</a></p>

<p>9. 有史以来最健康舒适的工作座椅 Herman Miller Aeron<br />
    <a href="http://knewone.com/things/herman-miller-aeron">http://knewone.com/things/herman-miller-aeron</a></p>

<p>10. 鼠标 G700s (快捷键复制, 剪切, 粘贴, 关闭窗口, 后退, 前进等, 谁用谁知道)</p>

<p>11. tornado (异步, 高性能, 值得拥有, 学习中&hellip;)<br />
    <a href="http://www.tornadoweb.org/en/stable/">http://www.tornadoweb.org/en/stable/</a></p>

<p>12. flask (文档最好的微框架, 看完后基本了解 web 是怎么一回事了, 扩展很方便)<br />
    <a href="http://flask.pocoo.org/">http://flask.pocoo.org/</a></p>

<p>13. Git (最好用的版本管控软件, 没有之一, 内部用可以试试 gitlab, 很好很强大, oschina的代码托管就是基于它)<br />
    <a href="http://git-scm.com/">官方Git</a><br />
    <a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000">史上最浅显易懂的Git教程</a></p>

<p>14. Postgresql (最强大的开源数据库, 有的特性连一些商业数据库都不具备)<br />
    <a href="http://www.postgresql.org/">http://www.postgresql.org/</a></p>

<p>15. mongodb (很强大的 NoSQL 文档数据库, 值得一试)<br />
    <a href="http://www.mongodb.org/">http://www.mongodb.org/</a></p>

<p>顺序乱, 想哪写哪.</p>

<p>待续.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[令人崩溃的 marrow.mailer 的 Py2exe 打包历程]]></title>
    <link href="http://lixxu.me/blog/2014/08/08/suck-marrow-mailer/"/>
    <updated>2014-08-08T16:10:51+08:00</updated>
    <id>http://lixxu.me/blog/2014/08/08/suck-marrow-mailer</id>
    <content type="html"><![CDATA[<p>今天在打包一个小工具时, 由于使用 <code>marrow.mailer</code>, 碰到了经典的 <code>py2exe 找不到使用 pip 安装的包</code> 的问题.
于是使用了以前的大法: <a href="http://www.py2exe.org/index.cgi/ExeWithEggs">http://www.py2exe.org/index.cgi/ExeWithEggs</a>
再加上又碰到的各种各种的问题. 虽然最后解决了, 但是过程太崩溃了, 不想多说, 只记下过程.</p>

<p>1. 下载 <code>marrow.mailer</code> 压缩包, 解压, 用上面的大法安装</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python setup.py install_lib</span></code></pre></td></tr></table></div></figure>


<p>2. 同上, 依次安装 <code>marrow.util</code>, <code>marrow.interface</code>, <code>futures</code></p>

<p>3. 程序里类似这样的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="c">#-*- coding: utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">unicode_literals</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">marrow.mailer.manager</span> <span class="kn">import</span> <span class="n">futures</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">marrow.mailer.transport</span> <span class="kn">import</span> <span class="n">smtp</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">marrow.mailer</span> <span class="kn">import</span> <span class="n">Mailer</span><span class="p">,</span> <span class="n">Message</span>
</span><span class='line'>
</span><span class='line'><span class="n">host</span> <span class="o">=</span> <span class="s">&#39;localhost&#39;</span>
</span><span class='line'><span class="n">mailer</span> <span class="o">=</span> <span class="n">Mailer</span><span class="p">({</span><span class="s">&#39;manager.use&#39;</span><span class="p">:</span> <span class="n">futures</span><span class="o">.</span><span class="n">FuturesManager</span><span class="p">,</span>
</span><span class='line'>                 <span class="s">&#39;transport.use&#39;</span><span class="p">:</span> <span class="n">smtp</span><span class="o">.</span><span class="n">SMTPTransport</span><span class="p">,</span>
</span><span class='line'>                 <span class="s">&#39;transport.host&#39;</span><span class="p">:</span> <span class="n">host</span><span class="p">,</span>
</span><span class='line'>                 <span class="p">})</span>
</span><span class='line'><span class="n">mailer</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>
</span><span class='line'><span class="n">author</span> <span class="o">=</span> <span class="p">((</span><span class="s">&#39;Sender&#39;</span><span class="p">,</span> <span class="s">&#39;no-reply@example.com&#39;</span><span class="p">))</span>
</span><span class='line'><span class="n">msg</span> <span class="o">=</span> <span class="n">Message</span><span class="p">(</span><span class="n">author</span><span class="o">=</span><span class="n">author</span><span class="p">)</span>
</span><span class='line'><span class="n">msg</span><span class="o">.</span><span class="n">subject</span> <span class="o">=</span> <span class="s">&#39;Subject&#39;</span>
</span><span class='line'><span class="n">msg</span><span class="o">.</span><span class="n">to</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;aaa@example.com&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">msg</span><span class="o">.</span><span class="n">plain</span> <span class="o">=</span> <span class="s">&#39;plain mail&#39;</span>
</span><span class='line'><span class="n">msg</span><span class="o">.</span><span class="n">rich</span> <span class="o">=</span> <span class="s">&#39;rich html&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">mailer</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">msg</span><span class="p">)</span>
</span><span class='line'><span class="n">mailer</span><span class="o">.</span><span class="n">stop</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>备注:</p>

<p>由于 <code>marrow.mailer</code> 的 bug: <a href="https://github.com/marrow/marrow.mailer/issues/36">https://github.com/marrow/marrow.mailer/issues/36</a> , 导致 <code>manager.use</code>, <code>transport.use</code> 要写成上面的格式, 看了源码才发现.当然这种写法在不需要打包时是不需要的:</p>

<figure class='code'><figcaption><span>site-packages\marrow\mailer\__init__.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># ...</span>
</span><span class='line'><span class="k">if</span> <span class="ow">not</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">Manager</span><span class="p">,</span> <span class="n">IManager</span><span class="p">):</span>
</span><span class='line'>    <span class="k">raise</span> <span class="ne">TypeError</span><span class="p">(</span><span class="s">&quot;Chosen manager does not conform to the manager API.&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># ...</span>
</span><span class='line'><span class="k">if</span> <span class="ow">not</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">Transport</span><span class="p">,</span> <span class="n">ITransport</span><span class="p">):</span>
</span><span class='line'>    <span class="k">raise</span> <span class="ne">TypeError</span><span class="p">(</span><span class="s">&quot;Chosen transport does not conform to the transport API.&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># ...</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[作为一个东北人, 被人无数次问过]]></title>
    <link href="http://lixxu.me/blog/2014/08/07/as-a-man/"/>
    <updated>2014-08-07T18:39:52+08:00</updated>
    <id>http://lixxu.me/blog/2014/08/07/as-a-man</id>
    <content type="html"><![CDATA[<p>网上看到, 忍不住放到这里收藏下:</p>

<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/dongbeiren.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows下git保存密码]]></title>
    <link href="http://lixxu.me/blog/2014/07/29/git-windows-credential/"/>
    <updated>2014-07-29T20:27:58+08:00</updated>
    <id>http://lixxu.me/blog/2014/07/29/git-windows-credential</id>
    <content type="html"><![CDATA[<p>更新: 直接保存密码是不行的, 需要安装 <code>git-credential-winstore</code>.
安装后, 就可以手动添加密码了.</p>

<p>越来越觉得 <code>SourceTree</code> 启动慢, 我都尽量在命令行下使用 <code>git</code> 了 (这样才是正道吧).
每次的推送都要输入用户名和密码, 用了 <code>_netrc</code> 大法也不管用, 隐约记得之前可以的, 是人品越来越好了吗?</p>

<p>总感觉不甘心, 就翻看 <a href="http://stackoverflow.com/questions/6031214/git-how-to-use-netrc-file-on-windows-to-save-user-and-password,">http://stackoverflow.com/questions/6031214/git-how-to-use-netrc-file-on-windows-to-save-user-and-password,</a> 看到 <code>git-credential-winstore</code> 这里, 就进去看看, 下载安装, 很小巧的东西, 才十几K.</p>

<p>接着再推送时, 弹出对话框, 输入用户名和密码, 就可以了. 看这个窗口的架势, 是在系统的密码管理里面, 进去一看, 果不其然, 在通用安全里, 静静地躺着刚刚保存的密码.
没有安装 <code>git-credential-winstore</code> (<a href="https://gitcredentialstore.codeplex.com/">https://gitcredentialstore.codeplex.com/</a>) 的同学可以手动添加试试, 此法仅限于 <code>http</code> 方式的验证, 不适合 <code>ssh</code> 模式.</p>

<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/windows_git_save_password.png"></p>

<p>顺便换上了 <code>度娘</code> 的CDN, 还用上了雅黑字体:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;script src="http://libs.baidu.com/jquery/1.9.1/jquery.min.js"&gt;&lt;/script&gt;
</span></code></pre></td></tr></table></div></figure>


<p>还有 <code>渣浪</code> 和 <code>小斗士</code> 的:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;script src="http://lib.sinaapp.com/js/jquery/1.9.1/jquery-1.9.1.min.js"&gt;&lt;/script&gt;
</span><span class='line'>
</span><span class='line'>&lt;script src="http://libs.useso.com/js/jquery/1.9.1/jquery.min.js"&gt;&lt;/script&gt;
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用七牛作为博客静态文件存放地]]></title>
    <link href="http://lixxu.me/blog/2014/07/28/use-qiniu-as-static-server/"/>
    <updated>2014-07-28T22:53:29+08:00</updated>
    <id>http://lixxu.me/blog/2014/07/28/use-qiniu-as-static-server</id>
    <content type="html"><![CDATA[<p>之前的图片放在 <code>images</code> 目录下, 不过随着博客的文章会越来越多, 将导致整个库变得越来越大, 而这些静态文件是没必要放在库里的.</p>

<p>碰巧在网上看到一篇提问说&#8221; 博客的静态文件都放在哪里托管? &ldquo;, 回答有各种, 也有 <code>七牛</code>, 而我对七牛算是有点了解, 知道这是一家使用 <code>go</code> 语言作为后台的云存储公司. 又在上海GDG组织的一次活动上听过创始人许式伟的演讲, 所以对七牛比较熟悉, 并且每月有10G的免费流量可以用, 个人用的话应该足够了, 就决定使用七牛放放静态文件.</p>

<p>好了, 不废话了.</p>

<p>1. 首先到官网注册账号 (推荐绑定手机号, 可以有更多的免费资源可用): <a href="https://portal.qiniu.com/signup">https://portal.qiniu.com/signup</a></p>

<!--more-->


<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/qiniu_signup.png"></p>

<p>2. 创建存储空间, 博客用的话就创建一个公开空间</p>

<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/qiniu_add_space.png"></p>

<p>3. 简单设置一下</p>

<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/qiniu_basic_setting.png"></p>

<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/qiniu_advanced_setting.png"></p>

<p>4. 把密钥记录下来, 待会的上传脚本需要用到</p>

<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/qiniu_key.png"></p>

<p>5. 到这里下载客户端工具 (<a href="http://developer.qiniu.com/docs/v6/tools/qrsync.html">http://developer.qiniu.com/docs/v6/tools/qrsync.html</a>), 有命令行和图形两种, 参照右面的说明就可以了.</p>

<p>需要注意的是配置文件里 <code>dest</code> 的部分不要像文档里的那样分行显得好看, 全部合并到一行里, 否则会出错. 把红框里的换成你自己的目录, 密钥和空间名.</p>

<p>更多详情可以参考官方文档, 比如本地文件上传后就可以删除了, 如果需要同步删除的应该怎么做等</p>

<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/qiniu_rsync_config.png"></p>

<p>6. 创建一个批处理文件, 方便上传, 如 <code>qiniu_pub.bat</code></p>

<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/qiniu_rsync_bat.png"></p>

<p>7. 以后有需要上传的文件, 就丢到你定义好的 <code>public</code> 文件夹里, 再运行 <code>qiniu_pub.bat</code> 就可以了, 已经同步的文件如果没有修改就不会同步的</p>

<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/qiniu_upload.png"></p>

<p>附我的七牛上传的目录结构, 仅供参考:</p>

<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/qiniu_folders.png"></p>

<p>好了, 码完收工, 早睡早起.</p>

<!--more-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[抓取 <<码农故事>> 文本]]></title>
    <link href="http://lixxu.me/blog/2014/07/25/get-coder-story-text-from-web/"/>
    <updated>2014-07-25T08:46:39+08:00</updated>
    <id>http://lixxu.me/blog/2014/07/25/get-coder-story-text-from-web</id>
    <content type="html"><![CDATA[<p>偶然看到这样一篇关于码农的小说, 感觉还可以, 就想收集下来慢慢看.
但是都是网页而且还挺多, 就看看有没有整理好的全本, 搜了一下没找到.</p>

<p>接着就手动复制粘贴, 贴了几篇感觉太枯燥, 就琢磨着如何使用 <code>requests</code> 和 <code>BeautifulSoup</code> 来提取文本.</p>

<p>很少使用 <code>BeautifulSoup</code>, 所以临时去看了一下文档, 开始走起.</p>

<p>1. 先用浏览器的 <code>审查元素</code> 获取分页的页面结构, 这里我们只需要 <code>标题</code> 和 <code>链接地址</code> 即可</p>

<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/coder_page.png"></p>

<!--more-->


<p>2. 分析页面内容抓取 <code>标题</code> 和 <code>链接地址</code>, 还一并抓取当前的章节, 否则就没法知道顺序了</p>

<p>3. 根据获取的链接抓取全文</p>

<p>4. 分析全文, 在 <code>entry</code> 下面的 <code>p</code> 和 <code>span</code> 里, 一开始我以为都在 <code>p</code> 结构里, 结果最后发现有的章节是空的, 看了下空的章节的结构, 原来用的是 <code>&lt;div&gt;&lt;span&gt;...&lt;/span&gt;&lt;/div&gt;</code> 的结构</p>

<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/coder_post.png"></p>

<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/coder_post2.png"></p>

<p>5. 这些都确定了后就可以开工了, 当然我是逐步确定的. 我的流程是: 按章节写到单独的文件里, 最后再合并. 好了, <code>Talk is cheap, show me the code.</code>:</p>

<figure class='code'><figcaption><span>coder_story.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="c">#-*- coding: utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os.path</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">requests</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">re</span>
</span><span class='line'>
</span><span class='line'><span class="n">digit_re</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">&#39;(\d+-?\d*)&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">url</span> <span class="o">=</span> <span class="s">r&#39;http://blog.jobbole.com/tag/</span><span class="si">%E</span><span class="s">7%A0</span><span class="si">%81%</span><span class="s">E5</span><span class="si">%86%</span><span class="s">9C</span><span class="si">%E</span><span class="s">6</span><span class="si">%95%</span><span class="s">85</span><span class="si">%E</span><span class="s">4%BA%8B/page/{}/&#39;</span>
</span><span class='line'><span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="s">&#39;coder_story&#39;</span><span class="p">):</span>
</span><span class='line'>    <span class="n">os</span><span class="o">.</span><span class="n">makedirs</span><span class="p">(</span><span class="s">&#39;coder_story&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">os</span><span class="o">.</span><span class="n">chdir</span><span class="p">(</span><span class="s">&#39;coder_story&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">for</span> <span class="n">page</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">):</span>
</span><span class='line'>    <span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">page</span><span class="p">))</span>
</span><span class='line'>    <span class="c"># soup = BeautifulSoup(r.content)  # lxml未安装时用这行</span>
</span><span class='line'>    <span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">content</span><span class="p">,</span> <span class="s">&#39;lxml&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">meta_title</span> <span class="ow">in</span> <span class="n">soup</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">&#39;a&#39;</span><span class="p">,</span> <span class="n">class_</span><span class="o">=</span><span class="s">&#39;meta-title&#39;</span><span class="p">):</span>
</span><span class='line'>        <span class="c"># 我们要的都必须有title</span>
</span><span class='line'>        <span class="k">if</span> <span class="s">&#39;title&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">meta_title</span><span class="o">.</span><span class="n">attrs</span><span class="p">:</span>
</span><span class='line'>            <span class="k">continue</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># 不是这个小说不要</span>
</span><span class='line'>        <span class="k">if</span> <span class="s">u&#39;老码农原创小说&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">meta_title</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">]:</span>
</span><span class='line'>            <span class="k">continue</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">meta_title</span><span class="p">)</span>  <span class="c"># 打印一下标题</span>
</span><span class='line'>        <span class="n">href</span> <span class="o">=</span> <span class="n">meta_title</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;href&#39;</span><span class="p">)</span>  <span class="c"># 获取文章链接</span>
</span><span class='line'>        <span class="c"># 获取章节序号</span>
</span><span class='line'>        <span class="n">found</span> <span class="o">=</span> <span class="n">digit_re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="n">meta_title</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">])</span>
</span><span class='line'>        <span class="k">if</span> <span class="ow">not</span> <span class="n">found</span><span class="p">:</span>
</span><span class='line'>            <span class="k">continue</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># 个位数章节前补0, 为了后面的合并</span>
</span><span class='line'>        <span class="n">page_no</span> <span class="o">=</span> <span class="n">found</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>        <span class="k">if</span> <span class="nb">int</span><span class="p">(</span><span class="n">page_no</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;-&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">:</span>
</span><span class='line'>            <span class="n">page_no</span> <span class="o">=</span> <span class="s">&#39;0&#39;</span> <span class="o">+</span> <span class="n">page_no</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># 获取文章的内容</span>
</span><span class='line'>        <span class="n">r2</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">href</span><span class="p">)</span>
</span><span class='line'>        <span class="c"># s2 = BeautifulSoup(r2.content)  # lxml未安装时用这行</span>
</span><span class='line'>        <span class="n">s2</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">r2</span><span class="o">.</span><span class="n">content</span><span class="p">,</span> <span class="s">&#39;lxml&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">entry</span> <span class="o">=</span> <span class="n">s2</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s">&#39;div&#39;</span><span class="p">,</span> <span class="n">class_</span><span class="o">=</span><span class="s">&#39;entry&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;{}.txt&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">page_no</span><span class="p">),</span> <span class="s">&#39;w&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span><span class='line'>            <span class="c"># 内容在 &lt;p&gt;...&lt;/p&gt; 或 &lt;div&gt;&lt;span&gt;...&lt;/span&gt;&lt;/div&gt;里</span>
</span><span class='line'>            <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">entry</span><span class="o">.</span><span class="n">find_all</span><span class="p">([</span><span class="s">&#39;p&#39;</span><span class="p">,</span> <span class="s">&#39;span&#39;</span><span class="p">]):</span>
</span><span class='line'>                <span class="c"># copyright-meta部分, 跳过</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">p</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;class&#39;</span><span class="p">):</span>
</span><span class='line'>                    <span class="k">continue</span>
</span><span class='line'>
</span><span class='line'>                <span class="c"># 空白行, 文件里写两行空白, 便于阅读</span>
</span><span class='line'>                <span class="n">text</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">get_text</span><span class="p">()</span>
</span><span class='line'>                <span class="k">if</span> <span class="ow">not</span> <span class="n">text</span><span class="p">:</span>
</span><span class='line'>                    <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\r\n\r\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>                    <span class="k">continue</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">text</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&#39;utf-8&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\r\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>                <span class="c"># &quot;待续&quot; 的地方, 接着就是另一章了, 插入空行</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">text</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s">u&#39;&lt;</span><span class="se">\u5f85\u7eed</span><span class="s">&gt;&#39;</span><span class="p">):</span>
</span><span class='line'>                    <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\r\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>6. 合并到一个文件, 用 <code>Python</code> 碰到编码错误, 时间紧, 就用批处理好了, 还简单</p>

<figure class='code'><figcaption><span>coder_story.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">copy</span> <span class="o">*.</span><span class="n">txt</span> <span class="err">码农故事</span><span class="o">.</span><span class="n">txt</span>
</span></code></pre></td></tr></table></div></figure>


<p>7. 打完收工.</p>

<p>后记:</p>

<p>就在合并时, 看到最后的一句话, 马上吐出一升老血:</p>

<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/coder_end.png"></p>

<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/tuxie.gif"></p>

<p>不过, 在 <code>kindle</code> 上还是 txt 的效果好一些, pdf 转换的有些乱码, 不完美.</p>

<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/kindle_bug.png"></p>

<p>附下载地址:</p>

<p>1. TXT <a href="http://7ktor3.com1.z0.glb.clouddn.com/%E7%A0%81%E5%86%9C%E6%95%85%E4%BA%8B.txt">http://7ktor3.com1.z0.glb.clouddn.com/%E7%A0%81%E5%86%9C%E6%95%85%E4%BA%8B.txt</a></p>

<p>2. PDF <a href="http://7ktor3.com1.z0.glb.clouddn.com/%E7%A0%81%E5%86%9C%E6%95%85%E4%BA%8B.pdf">http://7ktor3.com1.z0.glb.clouddn.com/%E7%A0%81%E5%86%9C%E6%95%85%E4%BA%8B.pdf</a></p>

<!--more-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android刷机相关]]></title>
    <link href="http://lixxu.me/blog/2014/07/01/android-flash-stuff/"/>
    <updated>2014-07-01T18:31:16+08:00</updated>
    <id>http://lixxu.me/blog/2014/07/01/android-flash-stuff</id>
    <content type="html"><![CDATA[<p>记录下来备忘:</p>

<p>背景:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1. Nexus 4
</span><span class='line'>
</span><span class='line'>2. Mokee 4.4.4
</span><span class='line'>
</span><span class='line'>3. TWRP</span></code></pre></td></tr></table></div></figure>


<p>我保存的基带共享链接: <a href="http://pan.baidu.com/s/1gdf4pfd">http://pan.baidu.com/s/1gdf4pfd</a></p>

<p>原帖看这里: <a href="http://bbs.mfunz.com/thread-947343-1-1.html">http://bbs.mfunz.com/thread-947343-1-1.html</a></p>

<p>1. 刷基带, 按照帖子来就可以, 简单就是</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1. 进入fastboot
</span><span class='line'>2. flash-all.bat</span></code></pre></td></tr></table></div></figure>


<p>2. 更新TWRP <a href="http://teamw.in/project/twrp2/129">http://teamw.in/project/twrp2/129</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Download - Recovery Image Method:
</span><span class='line'>
</span><span class='line'>Download the newest .img file here
</span><span class='line'>
</span><span class='line'>Download the above file.  Turn off your device. Turn on the device and keep
</span><span class='line'>holding volume down until a menu shows up. The device will now be in fastboot
</span><span class='line'>mode. Plug the device into your computer.  If you have the right drivers
</span><span class='line'>installed, your screen should now say FASTBOOT USB.  Run the following command
</span><span class='line'>via the command line:
</span><span class='line'>
</span><span class='line'>fastboot flash recovery recoveryfilename.img
</span><span class='line'>
</span><span class='line'>Note that you will need to change the last part to match the name of the file
</span><span class='line'>that you just downloaded.  You will also need adb and fastboot for your computer.</span></code></pre></td></tr></table></div></figure>


<p>简单讲就是:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1. 下载.img文件
</span><span class='line'>2. 进入fastboot
</span><span class='line'>3. 运行 fastboot flash recovery openrecovery-twrp-2.7.1.0-mako.img
</span><span class='line'>
</span><span class='line'>注意:
</span><span class='line'>1. 这里的 openrecovery-twrp-2.7.1.0-mako.img 要换成你对应的名字
</span><span class='line'>2. fastboot 实际是 fastboot.exe</span></code></pre></td></tr></table></div></figure>


<p>补: 如何进 <code>fastboot</code>?</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1. 关机
</span><span class='line'>2. 电源 + 音量-, 直到出现菜单</span></code></pre></td></tr></table></div></figure>


<p>以上.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Python 设置系统时间]]></title>
    <link href="http://lixxu.me/blog/2014/06/22/use-python-set-system-time/"/>
    <updated>2014-06-22T16:53:43+08:00</updated>
    <id>http://lixxu.me/blog/2014/06/22/use-python-set-system-time</id>
    <content type="html"><![CDATA[<p>接上文: <a href="http://lixxu.me/blog/2014/06/22/nssm-install-windows-service">使用 NSSM 安装 Windows 系统服务</a></p>

<p>上一篇介绍使用了 <code>net time</code> 来同步系统时间, 后来突然想到如果没有服务器可供同步时间或电脑无法直接连接到服务器怎么办?</p>

<p>就去找了下使用 <code>Python</code> 设置时间的例子, 还真有: <a href="http://stackoverflow.com/questions/12081310/python-module-to-change-system-date-and-time">http://stackoverflow.com/questions/12081310/python-module-to-change-system-date-and-time</a></p>

<p>直接贴在这里:</p>

<figure class='code'><figcaption><span>set_time.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">datetime</span>
</span><span class='line'>
</span><span class='line'><span class="n">time_tuple</span> <span class="o">=</span> <span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="c"># Year</span>
</span><span class='line'>                 <span class="mi">9</span><span class="p">,</span> <span class="c"># Month</span>
</span><span class='line'>                 <span class="mi">6</span><span class="p">,</span> <span class="c"># Day</span>
</span><span class='line'>                 <span class="mi">0</span><span class="p">,</span> <span class="c"># Hour</span>
</span><span class='line'>                <span class="mi">38</span><span class="p">,</span> <span class="c"># Minute</span>
</span><span class='line'>                 <span class="mi">0</span><span class="p">,</span> <span class="c"># Second</span>
</span><span class='line'>                 <span class="mi">0</span><span class="p">,</span> <span class="c"># Millisecond</span>
</span><span class='line'>              <span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">_win_set_time</span><span class="p">(</span><span class="n">time_tuple</span><span class="p">):</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">pywin32</span>
</span><span class='line'>    <span class="c"># http://timgolden.me.uk/pywin32-docs/win32api__SetSystemTime_meth.html</span>
</span><span class='line'>    <span class="c"># pywin32.SetSystemTime(year, month, dayOfWeek, day, hour, minute, second, millseconds)</span>
</span><span class='line'>    <span class="n">dayOfWeek</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="n">time_tuple</span><span class="p">)</span><span class="o">.</span><span class="n">isocalendar</span><span class="p">()[</span><span class="mi">2</span><span class="p">]</span>
</span><span class='line'>    <span class="n">pywin32</span><span class="o">.</span><span class="n">SetSystemTime</span><span class="p">(</span><span class="n">time_tuple</span><span class="p">[:</span><span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="p">(</span><span class="n">dayOfWeek</span><span class="p">,)</span> <span class="o">+</span> <span class="n">time_tuple</span><span class="p">[</span><span class="mi">2</span><span class="p">:])</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">_linux_set_time</span><span class="p">(</span><span class="n">time_tuple</span><span class="p">):</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">ctypes</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">ctypes.util</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">time</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># /usr/include/linux/time.h:</span>
</span><span class='line'>    <span class="c">#</span>
</span><span class='line'>    <span class="c"># define CLOCK_REALTIME                     0</span>
</span><span class='line'>    <span class="n">CLOCK_REALTIME</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># /usr/include/time.h</span>
</span><span class='line'>    <span class="c">#</span>
</span><span class='line'>    <span class="c"># struct timespec</span>
</span><span class='line'>    <span class="c">#  {</span>
</span><span class='line'>    <span class="c">#    __time_t tv_sec;            /* Seconds.  */</span>
</span><span class='line'>    <span class="c">#    long int tv_nsec;           /* Nanoseconds.  */</span>
</span><span class='line'>    <span class="c">#  };</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">timespec</span><span class="p">(</span><span class="n">ctypes</span><span class="o">.</span><span class="n">Structure</span><span class="p">):</span>
</span><span class='line'>        <span class="n">_fields_</span> <span class="o">=</span> <span class="p">[(</span><span class="s">&quot;tv_sec&quot;</span><span class="p">,</span> <span class="n">ctypes</span><span class="o">.</span><span class="n">c_long</span><span class="p">),</span>
</span><span class='line'>                    <span class="p">(</span><span class="s">&quot;tv_nsec&quot;</span><span class="p">,</span> <span class="n">ctypes</span><span class="o">.</span><span class="n">c_long</span><span class="p">)]</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">librt</span> <span class="o">=</span> <span class="n">ctypes</span><span class="o">.</span><span class="n">CDLL</span><span class="p">(</span><span class="n">ctypes</span><span class="o">.</span><span class="n">util</span><span class="o">.</span><span class="n">find_library</span><span class="p">(</span><span class="s">&quot;rt&quot;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ts</span> <span class="o">=</span> <span class="n">timespec</span><span class="p">()</span>
</span><span class='line'>    <span class="n">ts</span><span class="o">.</span><span class="n">tv_sec</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">mktime</span><span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="o">*</span><span class="n">time_tuple</span><span class="p">[:</span><span class="mi">6</span><span class="p">])</span><span class="o">.</span><span class="n">timetuple</span><span class="p">()))</span>
</span><span class='line'>    <span class="n">ts</span><span class="o">.</span><span class="n">tv_nsec</span> <span class="o">=</span> <span class="n">time_tuple</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span> <span class="o">*</span> <span class="mi">1000000</span> <span class="c"># Millisecond to nanosecond</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># http://linux.die.net/man/3/clock_settime</span>
</span><span class='line'>    <span class="n">librt</span><span class="o">.</span><span class="n">clock_settime</span><span class="p">(</span><span class="n">CLOCK_REALTIME</span><span class="p">,</span> <span class="n">ctypes</span><span class="o">.</span><span class="n">byref</span><span class="p">(</span><span class="n">ts</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">sys</span><span class="o">.</span><span class="n">platform</span><span class="o">==</span><span class="s">&#39;linux2&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">_linux_set_time</span><span class="p">(</span><span class="n">time_tuple</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">elif</span>  <span class="n">sys</span><span class="o">.</span><span class="n">platform</span><span class="o">==</span><span class="s">&#39;win32&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">_win_set_time</span><span class="p">(</span><span class="n">time_tuple</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>可是没有可供同步用的服务器, 那时间怎么来呢?</p>

<p>1. 跑一个 web, 可以返回一个 <code>json</code> 的数据, 如:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="c">#-*- coding: utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">unicode_literals</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">datetime</span> <span class="kn">import</span> <span class="n">datetime</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span> <span class="n">jsonify</span>
</span><span class='line'>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/api/get-time/&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">get_time</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">jsonify</span><span class="p">(</span><span class="n">time</span><span class="o">=</span><span class="nb">tuple</span><span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">utcnow</span><span class="p">()</span><span class="o">.</span><span class="n">timetuple</span><span class="p">()))</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">debug</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">host</span><span class="o">=</span><span class="s">&#39;0.0.0.0&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>客户端可以这样来获取和同步时间 (假设是 Windows 平台), 上面的 <code>set_time.py</code> 需要改一下:</p>

<figure class='code'><figcaption><span>set_time2.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">datetime</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">_win_set_time</span><span class="p">(</span><span class="n">time_tuple</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&#39;&#39;&#39;time_tuple: </span>
</span><span class='line'><span class="sd">    year, month, day, hour, minute, second, day_of_week, day_of_year, is_dist</span>
</span><span class='line'><span class="sd">    &#39;&#39;&#39;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">pywin32</span>
</span><span class='line'>    <span class="c"># http://timgolden.me.uk/pywin32-docs/win32api__SetSystemTime_meth.html</span>
</span><span class='line'>    <span class="c"># pywin32.SetSystemTime(year, month, dayOfWeek, day, hour, minute, second, millseconds)</span>
</span><span class='line'>    <span class="n">tt</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">time_tuple</span><span class="p">)</span>
</span><span class='line'>    <span class="n">tt</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">tt</span><span class="p">[</span><span class="mi">6</span><span class="p">])</span> <span class="c"># add day_of_week </span>
</span><span class='line'>    <span class="n">tt</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>  <span class="c"># set miliseconds</span>
</span><span class='line'>    <span class="n">pywin32</span><span class="o">.</span><span class="n">SetSystemTime</span><span class="p">(</span><span class="o">*</span><span class="n">tt</span><span class="p">[:</span><span class="mi">8</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">_linux_set_time</span><span class="p">(</span><span class="n">time_tuple</span><span class="p">):</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">ctypes</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">ctypes.util</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">time</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># /usr/include/linux/time.h:</span>
</span><span class='line'>    <span class="c">#</span>
</span><span class='line'>    <span class="c"># define CLOCK_REALTIME                     0</span>
</span><span class='line'>    <span class="n">CLOCK_REALTIME</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># /usr/include/time.h</span>
</span><span class='line'>    <span class="c">#</span>
</span><span class='line'>    <span class="c"># struct timespec</span>
</span><span class='line'>    <span class="c">#  {</span>
</span><span class='line'>    <span class="c">#    __time_t tv_sec;            /* Seconds.  */</span>
</span><span class='line'>    <span class="c">#    long int tv_nsec;           /* Nanoseconds.  */</span>
</span><span class='line'>    <span class="c">#  };</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">timespec</span><span class="p">(</span><span class="n">ctypes</span><span class="o">.</span><span class="n">Structure</span><span class="p">):</span>
</span><span class='line'>        <span class="n">_fields_</span> <span class="o">=</span> <span class="p">[(</span><span class="s">&quot;tv_sec&quot;</span><span class="p">,</span> <span class="n">ctypes</span><span class="o">.</span><span class="n">c_long</span><span class="p">),</span>
</span><span class='line'>                    <span class="p">(</span><span class="s">&quot;tv_nsec&quot;</span><span class="p">,</span> <span class="n">ctypes</span><span class="o">.</span><span class="n">c_long</span><span class="p">)]</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">librt</span> <span class="o">=</span> <span class="n">ctypes</span><span class="o">.</span><span class="n">CDLL</span><span class="p">(</span><span class="n">ctypes</span><span class="o">.</span><span class="n">util</span><span class="o">.</span><span class="n">find_library</span><span class="p">(</span><span class="s">&quot;rt&quot;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ts</span> <span class="o">=</span> <span class="n">timespec</span><span class="p">()</span>
</span><span class='line'>    <span class="n">ts</span><span class="o">.</span><span class="n">tv_sec</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">mktime</span><span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="o">*</span><span class="n">time_tuple</span><span class="p">[:</span><span class="mi">6</span><span class="p">])</span><span class="o">.</span><span class="n">timetuple</span><span class="p">()))</span>
</span><span class='line'>    <span class="n">ts</span><span class="o">.</span><span class="n">tv_nsec</span> <span class="o">=</span> <span class="n">time_tuple</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span> <span class="o">*</span> <span class="mi">1000000</span> <span class="c"># Millisecond to nanosecond</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># http://linux.die.net/man/3/clock_settime</span>
</span><span class='line'>    <span class="n">librt</span><span class="o">.</span><span class="n">clock_settime</span><span class="p">(</span><span class="n">CLOCK_REALTIME</span><span class="p">,</span> <span class="n">ctypes</span><span class="o">.</span><span class="n">byref</span><span class="p">(</span><span class="n">ts</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">set_time</span><span class="p">(</span><span class="n">time_tuple</span><span class="p">):</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">sys</span><span class="o">.</span><span class="n">platform</span><span class="o">==</span><span class="s">&#39;linux2&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">_linux_set_time</span><span class="p">(</span><span class="n">time_tuple</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">elif</span>  <span class="n">sys</span><span class="o">.</span><span class="n">platform</span><span class="o">==</span><span class="s">&#39;win32&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">_win_set_time</span><span class="p">(</span><span class="n">time_tuple</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>sync_time.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="c">#-*- coding: utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">unicode_literals</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">time</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">datetime</span> <span class="kn">import</span> <span class="n">datetime</span><span class="p">,</span> <span class="n">timedelta</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">requests</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">set_time2</span>
</span><span class='line'>
</span><span class='line'><span class="n">URL</span> <span class="o">=</span> <span class="s">&#39;http://a.b.c.d:5000/api/get-time/&#39;</span>
</span><span class='line'><span class="n">offset</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">timezone</span> <span class="k">if</span> <span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">localtime</span><span class="p">()</span><span class="o">.</span><span class="n">tm_isdst</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="k">else</span> <span class="n">time</span><span class="o">.</span><span class="n">altzone</span>
</span><span class='line'><span class="n">LOCAL_TZ</span> <span class="o">=</span> <span class="n">offset</span> <span class="o">/</span> <span class="mi">60</span> <span class="o">/</span> <span class="mi">60</span> <span class="o">*</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">get_time</span><span class="p">():</span>
</span><span class='line'>    <span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">URL</span><span class="p">)</span>
</span><span class='line'>    <span class="n">json</span> <span class="o">=</span> <span class="n">r</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">json</span><span class="p">[</span><span class="s">&#39;time&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">sync_time</span><span class="p">(</span><span class="n">tz</span><span class="p">,</span> <span class="n">ts</span><span class="p">):</span>
</span><span class='line'>    <span class="n">ts</span> <span class="o">=</span> <span class="n">get_time</span><span class="p">()</span>
</span><span class='line'>    <span class="n">to_time</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">(</span><span class="o">*</span><span class="n">ts</span><span class="p">[:</span><span class="mi">6</span><span class="p">])</span> <span class="o">+</span> <span class="n">timedelta</span><span class="p">(</span><span class="n">hours</span><span class="o">=</span><span class="n">LOCAL_TZ</span><span class="p">)</span>
</span><span class='line'>    <span class="n">set_time2</span><span class="o">.</span><span class="n">set_time</span><span class="p">(</span><span class="n">to_time</span><span class="o">.</span><span class="n">timetuple</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">sync_time</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意: 以上代码未经测试, 可能有错误.</p>

<p>2. 如果无法直接连接到提供时间的服务器呢?
比如有两个网络, 一个是测试电脑的内部网, 服务器在测试的通用网络.</p>

<p>可以使用一个可以连通两个网络的电脑上作为交换数据的中间人, 具体的是使用文件交换还是像 <code>socket</code> 之类的网络接口服务交换就随你的喜好了.</p>

<p>拙见.</p>

<!--more-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 NSSM 安装 Windows 系统服务]]></title>
    <link href="http://lixxu.me/blog/2014/06/22/nssm-install-windows-service/"/>
    <updated>2014-06-22T16:15:55+08:00</updated>
    <id>http://lixxu.me/blog/2014/06/22/nssm-install-windows-service</id>
    <content type="html"><![CDATA[<p>工厂里的某些测试电脑存在时间不对的问题, 最开始使用简单的批处理加上
<a href="http://nssm.cc/">nssm</a> 安装成 service 的方式, 比如下面的示例:</p>

<figure class='code'><figcaption><span>sync_time.bat </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>sync_time:
</span><span class='line'>net time \\a.b.c.d <span class="n">/set</span> <span class="n">/y</span>
</span><span class='line'>
</span><span class='line'>sleep <span class="m">3600</span>
</span><span class='line'><span class="k">goto</span> <span class="nl">sync_time</span>
</span></code></pre></td></tr></table></div></figure>


<p>但在使用的过程中出现了这个 service 吃掉许多 CPU 的问题.
按道理说在 sleep 后应该会进入休眠状态, 不应该再占用 CPU.
不清楚什么原因, 就使用 <code>Python</code> 重写了.</p>

<!--more-->


<p>1. 主程序 <code>main.py</code></p>

<figure class='code'><figcaption><span>main.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="c">#-*- coding: utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">unicode_literals</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">subprocess</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">time</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">click</span>
</span><span class='line'>
</span><span class='line'><span class="n">__version__</span> <span class="o">=</span> <span class="s">&#39;0.1&#39;</span>
</span><span class='line'><span class="n">DEFAULT_SERVERS</span> <span class="o">=</span> <span class="s">&#39;server_a,server_b&#39;</span>
</span><span class='line'><span class="n">IP_MAPS</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="n">server_a</span><span class="o">=</span><span class="s">&#39;a.b.c.d&#39;</span><span class="p">,</span> <span class="n">server_b</span><span class="o">=</span><span class="s">&#39;a.b.c.e&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">CMD</span> <span class="o">=</span> <span class="s">r&#39;net time </span><span class="se">\\</span><span class="s">{} /set /y&#39;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">run_cmd</span><span class="p">(</span><span class="n">server</span><span class="p">):</span>
</span><span class='line'>    <span class="n">status</span> <span class="o">=</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">CMD</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">server</span><span class="p">))</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">status</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">True</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ip</span> <span class="o">=</span> <span class="n">IP_MAPS</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">server</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">ip</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">CMD</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">ip</span><span class="p">),</span> <span class="n">shell</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="bp">False</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nd">@click.command</span><span class="p">()</span>
</span><span class='line'><span class="nd">@click.option</span><span class="p">(</span><span class="s">&#39;--servers&#39;</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="n">DEFAULT_SERVERS</span><span class="p">,</span>
</span><span class='line'>              <span class="n">help</span><span class="o">=</span><span class="s">&#39;servers name or IP list, seperated by &quot;,&quot;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nd">@click.option</span><span class="p">(</span><span class="s">&#39;--sleep&#39;</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="mi">600</span><span class="p">,</span>
</span><span class='line'>              <span class="n">help</span><span class="o">=</span><span class="s">&#39;sleep seconds till next run, default is 600s (10 minutes)&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">sync_time</span><span class="p">(</span><span class="n">servers</span><span class="p">,</span> <span class="n">sleep</span><span class="p">):</span>
</span><span class='line'>    <span class="k">while</span> <span class="mi">1</span><span class="p">:</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">server</span> <span class="ow">in</span> <span class="n">servers</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;,&#39;</span><span class="p">):</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">run_cmd</span><span class="p">(</span><span class="n">server</span><span class="o">.</span><span class="n">strip</span><span class="p">()):</span>
</span><span class='line'>                <span class="k">break</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="n">sleep</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">sync_time</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>2. 使用 <code>py2exe</code> 或其他工具打包 <code>main.py</code> 为可执行文件, 比如 <code>SyncTimer.exe</code></p>

<p>3. 然后是安装/删除 service 的批处理:</p>

<p>3.1 <code>install.bat</code></p>

<figure class='code'><figcaption><span>install.bat </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="p">@</span><span class="k">echo</span> <span class="k">off</span>
</span><span class='line'><span class="k">set</span> <span class="nv">service</span><span class="o">=</span>SyncTimer
</span><span class='line'><span class="k">echo</span> <span class="nv">%PROCESSOR_ARCHITECTURE%</span> <span class="p">|</span> <span class="n">find</span> <span class="n">/i</span> <span class="s2">&quot;x86&quot;</span> <span class="p">&gt;</span> <span class="n">nul</span>
</span><span class='line'><span class="k">if</span> <span class="nv">%errorlevel%</span><span class="o">==</span><span class="m">0</span> (
</span><span class='line'>    <span class="k">set</span> <span class="nv">nssm</span><span class="o">=</span>nssm<span class="m">32</span>.exe
</span><span class='line'>) <span class="k">else</span> (
</span><span class='line'>    <span class="k">set</span> <span class="nv">nssm</span><span class="o">=</span>nssm<span class="m">64</span>.exe
</span><span class='line'>)
</span><span class='line'>
</span><span class='line'><span class="nv">%nssm%</span> install <span class="s2">&quot;%service%&quot;</span> <span class="s2">&quot;%~dp0SyncTimer.exe&quot;</span>
</span><span class='line'>
</span><span class='line'>net start <span class="nv">%service%</span>
</span><span class='line'>
</span><span class='line'>sleep <span class="m">5</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.2 <code>remove.bat</code></p>

<figure class='code'><figcaption><span>remove.bat </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="p">@</span><span class="k">echo</span> <span class="k">off</span>
</span><span class='line'><span class="k">set</span> <span class="nv">exename</span><span class="o">=</span>SyncTimer
</span><span class='line'>net stop <span class="nv">%exename%</span>
</span><span class='line'>
</span><span class='line'><span class="k">echo</span> <span class="nv">%PROCESSOR_ARCHITECTURE%</span> <span class="p">|</span> <span class="n">find</span> <span class="n">/i</span> <span class="s2">&quot;x86&quot;</span> <span class="p">&gt;</span> <span class="n">nul</span>
</span><span class='line'><span class="k">if</span> <span class="nv">%errorlevel%</span><span class="o">==</span><span class="m">0</span> (
</span><span class='line'>    <span class="k">set</span> <span class="nv">nssm</span><span class="o">=</span>nssm<span class="m">32</span>.exe
</span><span class='line'>) <span class="k">else</span> (
</span><span class='line'>    <span class="k">set</span> <span class="nv">nssm</span><span class="o">=</span>nssm<span class="m">64</span>.exe
</span><span class='line'>)
</span><span class='line'>
</span><span class='line'><span class="nv">%nssm%</span> remove <span class="s2">&quot;%exename%&quot;</span> confirm
</span><span class='line'>sleep <span class="m">5</span>
</span></code></pre></td></tr></table></div></figure>


<p>当然了, 你需要到 <a href="http://nssm.cc/download">http://nssm.cc/download</a> 下载 <code>nssm</code> 的执行程序.
分别把 32 位和 64 位的执行文件和你的 EXE 文件放到一起, 并改名为 <code>nssm32.exe</code> 和 <code>nssm64.exe</code>. 在安装 service 后也不能删除这些文件, 因为 service 关联的程序是 <code>nssm</code>.</p>

<p>这里有个注意的地方:
<code>nssm</code> 的文档上说使用命令行安装时如果不想弹出确认对话框, 可以写成这样的:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>%nssm% install "%service%" "%~dp0SyncTimer.exe" confirm</span></code></pre></td></tr></table></div></figure>


<p>但是这样安装的 service 始终处于 <code>paused</code> 状态, 一度让我以为是程序里 <code>sleep</code> 导致的. 但在使用对话框安装时却一点问题都没有.
后来看了下系统日志, 发现是路径的问题. 后面就使用 exe 的绝对路径并且把后面的 <code>confirm</code> 给去掉了才算正常.</p>

<p>本来打算写如何使用 <code>Python</code> 设置系统时间的怎么变成 <code>nssm</code> 了?</p>

<!--more-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flask-script 和 Gevent 结合使用]]></title>
    <link href="http://lixxu.me/blog/2014/06/10/use-gevent-with-flask-script/"/>
    <updated>2014-06-10T15:09:51+08:00</updated>
    <id>http://lixxu.me/blog/2014/06/10/use-gevent-with-flask-script</id>
    <content type="html"><![CDATA[<p>之前一直没用过 <code>flask-script</code>, 可是看了很多其他人的例子都在用这么个玩意. 碰巧手上有个现在做的一个应用, 所以打算用一下.</p>

<p>用了之后出现问题了: <code>python manage.py runserver</code> 使用的是默认的 <code>wsgi 服务器</code>, 而我在 windows 下一直使用 <code>gevent</code> 调试的.
看了下文档, 差不多就是这样:</p>

<figure class='code'><figcaption><span>manage.py mark:40-53 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="c">#-*- coding: utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">unicode_literals</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os.path</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">app</span> <span class="kn">import</span> <span class="n">create_app</span><span class="p">,</span> <span class="n">db</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">app.models</span> <span class="kn">import</span> <span class="n">User</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">flask.ext.script</span> <span class="kn">import</span> <span class="n">Manager</span><span class="p">,</span> <span class="n">Shell</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">flask.ext.migrate</span> <span class="kn">import</span> <span class="n">Migrate</span><span class="p">,</span> <span class="n">MigrateCommand</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isfile</span><span class="p">(</span><span class="s">&#39;app.env&#39;</span><span class="p">):</span>
</span><span class='line'>    <span class="c"># print(&#39;importing environment from app.env...&#39;)</span>
</span><span class='line'>    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;app.env&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">f</span><span class="p">:</span>
</span><span class='line'>            <span class="k">if</span> <span class="ow">not</span> <span class="n">line</span><span class="o">.</span><span class="n">lstrip</span><span class="p">()</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&#39;#&#39;</span><span class="p">)</span> <span class="ow">and</span> <span class="s">&#39;=&#39;</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
</span><span class='line'>                <span class="n">items</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;=&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>                <span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="n">items</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">())]</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">items</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">create_app</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">getenv</span><span class="p">(</span><span class="s">&#39;APP_ENV&#39;</span><span class="p">)</span> <span class="ow">or</span> <span class="s">&#39;default&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">manager</span> <span class="o">=</span> <span class="n">Manager</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
</span><span class='line'><span class="n">migrate</span> <span class="o">=</span> <span class="n">Migrate</span><span class="p">(</span><span class="n">app</span><span class="p">,</span> <span class="n">db</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">make_shell_context</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">dict</span><span class="p">(</span><span class="n">app</span><span class="o">=</span><span class="n">app</span><span class="p">,</span> <span class="n">db</span><span class="o">=</span><span class="n">db</span><span class="p">,</span> <span class="n">User</span><span class="o">=</span><span class="n">User</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">manager</span><span class="o">.</span><span class="n">add_command</span><span class="p">(</span><span class="s">&#39;shell&#39;</span><span class="p">,</span> <span class="n">Shell</span><span class="p">(</span><span class="n">make_context</span><span class="o">=</span><span class="n">make_shell_context</span><span class="p">))</span>
</span><span class='line'><span class="n">manager</span><span class="o">.</span><span class="n">add_command</span><span class="p">(</span><span class="s">&#39;db&#39;</span><span class="p">,</span> <span class="n">MigrateCommand</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nd">@manager.command</span>
</span><span class='line'><span class="k">def</span> <span class="nf">deploy</span><span class="p">():</span>
</span><span class='line'>    <span class="kn">from</span> <span class="nn">flask.ext.migrate</span> <span class="kn">import</span> <span class="n">upgrade</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">upgrade</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nd">@manager.command</span>
</span><span class='line'><span class="k">def</span> <span class="nf">rungevent</span><span class="p">():</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">werkzeug.serving</span>
</span><span class='line'>    <span class="kn">from</span> <span class="nn">werkzeug.debug</span> <span class="kn">import</span> <span class="n">DebuggedApplication</span>
</span><span class='line'>    <span class="kn">from</span> <span class="nn">gevent.wsgi</span> <span class="kn">import</span> <span class="n">WSGIServer</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@werkzeug.serving.run_with_reloader</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">run</span><span class="p">():</span>
</span><span class='line'>        <span class="n">app</span><span class="o">.</span><span class="n">debug</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'>        <span class="n">dapp</span> <span class="o">=</span> <span class="n">DebuggedApplication</span><span class="p">(</span><span class="n">app</span><span class="p">,</span> <span class="n">evalex</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>        <span class="n">ws</span> <span class="o">=</span> <span class="n">WSGIServer</span><span class="p">((</span><span class="s">&#39;&#39;</span><span class="p">,</span> <span class="mi">5000</span><span class="p">),</span> <span class="n">dapp</span><span class="p">)</span>
</span><span class='line'>        <span class="n">ws</span><span class="o">.</span><span class="n">serve_forever</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">run</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">manager</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后使用下面的命令就可以了:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>python manage.py rungevent
</span></code></pre></td></tr></table></div></figure>


<p>可是在 <code>rungevent</code> 里, 无论怎么传参数控制是否处在 <code>debug</code> 状态, 始终是 <code>autoreload</code>, 这可能是 <code>app.env</code> 里我设定了开发模式导致的.</p>

<p>不过, 算了, 生产环境我是用 <code>uwsgi</code> 的, 用不到这个玩意.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在 PyPi 上发布软件包]]></title>
    <link href="http://lixxu.me/blog/2014/06/09/how-to-register-pypi/"/>
    <updated>2014-06-09T14:33:10+08:00</updated>
    <id>http://lixxu.me/blog/2014/06/09/how-to-register-pypi</id>
    <content type="html"><![CDATA[<p>距上次发布软件包过去了很久, 都忘了操作步骤了, 今天碰巧发布一个小包, 放狗搜了一下, 记下来备忘:</p>

<p>来源: <a href="http://peterdowns.com/posts/first-time-with-pypi.html">http://peterdowns.com/posts/first-time-with-pypi.html</a></p>

<p>基本操作:</p>

<p>1. 准备好 <code>setup.py</code>, 提供一下 <code>setup.cfg</code></p>

<figure class='code'><figcaption><span>setup.cfg </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[metadata]</span>
</span><span class='line'><span class="na">description-file</span> <span class="o">=</span> <span class="s">README.md</span>
</span></code></pre></td></tr></table></div></figure>


<p>2. 注册:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python setup.py register -r pypi</span></code></pre></td></tr></table></div></figure>


<p>按提示做选择就可以了:</p>

<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/pypi.png"></p>

<p>3. 上传, 一串字符滚过之后看到 <code>200</code> 就 OK 了</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python setup.py upload -r pypi</span></code></pre></td></tr></table></div></figure>


<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/pypi_upload.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从输入 URL 到页面加载完成的过程中都发生了什么事情?]]></title>
    <link href="http://lixxu.me/blog/2014/05/26/what-happened-after-enter-url/"/>
    <updated>2014-05-26T16:25:28+08:00</updated>
    <id>http://lixxu.me/blog/2014/05/26/what-happened-after-enter-url</id>
    <content type="html"><![CDATA[<p><img src="http://7ktor3.com1.z0.glb.clouddn.com/nwind-weibo.png"></p>

<p>原文很长, 没看完我就觉得什么也不懂了, 囧.</p>

<p><a href="http://fex.baidu.com/blog/2014/05/what-happen/">http://fex.baidu.com/blog/2014/05/what-happen/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[程序员版<<泡沫>>]]></title>
    <link href="http://lixxu.me/blog/2014/05/19/coder-bubbles/"/>
    <updated>2014-05-19T13:25:19+08:00</updated>
    <id>http://lixxu.me/blog/2014/05/19/coder-bubbles</id>
    <content type="html"><![CDATA[<p>程序员版&lt;&lt;泡沫>> <a href="http://www.v2ex.com/t/113021#reply17">http://www.v2ex.com/t/113021#reply17</a></p>

<p><code>派森大法</code>, <code>烫烫烫烫烫烫烫烫烫烫烫烫烫烫</code>, &hellip;</p>

<p>视频在此, 加上弹幕才欢乐:</p>

<p><a href="http://www.acfun.com/v/ac1171084">http://www.acfun.com/v/ac1171084</a></p>

<object type="application/x-shockwave-flash" data="http://static.acfun.com/player/ACFlashPlayer.out.swf" width="550" height="348"><param name="allowfullscreen" value="true"><param name="allowscriptaccess" value="always"><param name="seamlesstabbing" value="true"><param name="wmode" value="direct"><param name="allowFullscreenInteractive" value="true"><param name="flashvars" value="type=page&url=http://www.acfun.com/v/ac1171084"></object>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pyodbc in 查询]]></title>
    <link href="http://lixxu.me/blog/2014/05/12/sql-in-operator-in-pyodbc/"/>
    <updated>2014-05-12T11:37:58+08:00</updated>
    <id>http://lixxu.me/blog/2014/05/12/sql-in-operator-in-pyodbc</id>
    <content type="html"><![CDATA[<p>参考链接, 看 <code>geographika</code> 的答案即可:</p>

<p><a href="http://stackoverflow.com/questions/4819356/sql-in-operator-using-pyodbc-and-sql-server">http://stackoverflow.com/questions/4819356/sql-in-operator-using-pyodbc-and-sql-server</a></p>

<p>记录一下如何在 <code>pyodbc</code> 中使用 <code>in</code> 查询:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">pyodbc</span>
</span><span class='line'>
</span><span class='line'><span class="n">alist</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
</span><span class='line'><span class="n">sql</span> <span class="o">=</span> <span class="s">&#39;select * from table where field1 in (</span><span class="si">%s</span><span class="s">)&#39;</span>
</span><span class='line'><span class="n">conn</span> <span class="o">=</span> <span class="n">pyodbc</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="o">...</span><span class="p">)</span>
</span><span class='line'><span class="n">cur</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="n">cursor</span><span class="p">()</span>
</span><span class='line'><span class="n">cur</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">sql</span> <span class="o">%</span> <span class="p">(</span><span class="s">&#39;,&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="s">&#39;?&#39;</span><span class="p">]</span> <span class="o">*</span> <span class="nb">len</span><span class="p">(</span><span class="n">alist</span><span class="p">))),</span> <span class="n">alist</span><span class="p">)</span>
</span><span class='line'><span class="n">cur</span><span class="o">.</span><span class="n">fetchall</span><span class="p">()</span>
</span><span class='line'><span class="n">conn</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[有时候, 你总要犒劳下自己]]></title>
    <link href="http://lixxu.me/blog/2014/05/12/hhkb-pro2/"/>
    <updated>2014-05-12T09:19:52+08:00</updated>
    <id>http://lixxu.me/blog/2014/05/12/hhkb-pro2</id>
    <content type="html"><![CDATA[<p>更新:<br />
<font color="red">到手一段时间了, 还是用的 <code>Sublime Text</code>, 惭愧.
试用后确实已经不习惯其他的键盘了.
</font></p>

<p>工作照:
<img src="http://7ktor3.com1.z0.glb.clouddn.com/hhkb_working.png"></p>

<p>虽然一直想试试机械的, 苦等不到红轴的好价, 却没想到等来等去等到中毒了:</p>

<p><a href="http://knewone.com/things/hhkb-pro-2/reviews/536c3b0731302d3b70ed0000">http://knewone.com/things/hhkb-pro-2/reviews/536c3b0731302d3b70ed0000</a>
<a href="http://ju.outofmemory.cn/entry/28653">http://ju.outofmemory.cn/entry/28653</a></p>

<p>好吧, 我决定败个 type-s 无刻的, 到时候就会是这样的, 是不是很装X?
<img src="http://7ktor3.com1.z0.glb.clouddn.com/hhkb_pro2_types.png"></p>

<p>随之配合的是, 以后要多用 <code>Vim</code> 了, 或许再学习下 <code>神的编辑器: EMACS</code>?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sublime3 用户设置备份]]></title>
    <link href="http://lixxu.me/blog/2014/05/09/sublime-user-profile-backup/"/>
    <updated>2014-05-09T08:54:27+08:00</updated>
    <id>http://lixxu.me/blog/2014/05/09/sublime-user-profile-backup</id>
    <content type="html"><![CDATA[<p>安装的插件:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1. Alignment
</span><span class='line'>2. Autoprefixer
</span><span class='line'>3. PySide
</span><span class='line'>4. PyV8
</span><span class='line'>5. SublimeLinter
</span><span class='line'>6. SublimeTmpl
</span><span class='line'>7. Terminal
</span><span class='line'>8. Markdown Preview
</span><span class='line'>9. Markdown Editing
</span><span class='line'>10. SmartMarkdown
</span><span class='line'>11. Pretty YAML
</span><span class='line'>12. Python Flake8 Lint
</span><span class='line'>13. SideBarEnhancements
</span><span class='line'>14. SublimeCodeIntel
</span><span class='line'>15. Git Config
</span><span class='line'>16. GitStatus
</span><span class='line'>17. Gitignore
</span><span class='line'>18. Go to definition
</span><span class='line'>19. GoToLastEdit
</span><span class='line'>20. SublimeGit</span></code></pre></td></tr></table></div></figure>


<p>Sublime3062 Windows 用户设置备忘:</p>

<!--more-->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;auto_complete_triggers&quot;</span><span class="p">:</span>
</span><span class='line'>    <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;characters&quot;</span><span class="p">:</span> <span class="s2">&quot; &quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;selector&quot;</span><span class="p">:</span> <span class="s2">&quot;text.html&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="nt">&quot;color_scheme&quot;</span><span class="p">:</span> <span class="s2">&quot;Packages/User/Solarized (Light) (SL).tmTheme&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;default_line_ending&quot;</span><span class="p">:</span> <span class="s2">&quot;unix&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;font_face&quot;</span><span class="p">:</span> <span class="s2">&quot;Source Code Pro&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;font_size&quot;</span><span class="p">:</span> <span class="mi">16</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;highlight_line&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;highlight_modified_tabs&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;ignored_packages&quot;</span><span class="p">:</span>
</span><span class='line'>    <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;Theme - Nil&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;RestructuredText&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;GoSublime&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;BracketHighlighter&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;Vintage&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;Markdown&quot;</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="nt">&quot;soda_classic_tabs&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;soda_folder_icons&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;fade_fold_buttons&quot;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;tab_size&quot;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;translate_tabs_to_spaces&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;trim_trailing_white_space_on_save&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;update_check&quot;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;word_wrap&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;show_encoding&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;show_line_endings&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;ensure_newline_at_eof_on_save&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;draw_white_space&quot;</span><span class="p">:</span> <span class="s2">&quot;all&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;always_show_minimap_viewport&quot;</span><span class="p">:</span> <span class="kc">true</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->

]]></content>
  </entry>
  
</feed>

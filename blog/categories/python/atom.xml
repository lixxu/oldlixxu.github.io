<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | 杂七杂八记一下]]></title>
  <link href="http://lixxu.me/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://lixxu.me/"/>
  <updated>2014-07-23T13:54:15+08:00</updated>
  <id>http://lixxu.me/</id>
  <author>
    <name><![CDATA[Lix Xu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用 Python 设置系统时间]]></title>
    <link href="http://lixxu.me/blog/2014/06/22/use-python-set-system-time/"/>
    <updated>2014-06-22T16:53:43+08:00</updated>
    <id>http://lixxu.me/blog/2014/06/22/use-python-set-system-time</id>
    <content type="html"><![CDATA[<p>接上文: <a href="/blog/2014/06/22/nssm-install-windows-service">使用 NSSM 安装 Windows 系统服务</a></p>

<p>上一篇介绍使用了 <code>net time</code> 来同步系统时间, 后来突然想到如果没有服务器可供同步时间或电脑无法直接连接到服务器怎么办?</p>

<p>就去找了下使用 <code>Python</code> 设置时间的例子, 还真有: <a href="http://stackoverflow.com/questions/12081310/python-module-to-change-system-date-and-time">http://stackoverflow.com/questions/12081310/python-module-to-change-system-date-and-time</a></p>

<p>直接贴在这里:
```python set_time.py
import sys
import datetime</p>

<p>time_tuple = (2012, # Year</p>

<pre><code>             9, # Month
             6, # Day
             0, # Hour
            38, # Minute
             0, # Second
             0, # Millisecond
          )
</code></pre>

<p>def _win_set_time(time_tuple):</p>

<pre><code>import pywin32
# http://timgolden.me.uk/pywin32-docs/win32api__SetSystemTime_meth.html
# pywin32.SetSystemTime(year, month, dayOfWeek, day, hour, minute, second, millseconds)
dayOfWeek = datetime.datetime(time_tuple).isocalendar()[2]
pywin32.SetSystemTime(time_tuple[:2] + (dayOfWeek,) + time_tuple[2:])
</code></pre>

<p>def _linux_set_time(time_tuple):</p>

<pre><code>import ctypes
import ctypes.util
import time

# /usr/include/linux/time.h:
#
# define CLOCK_REALTIME                     0
CLOCK_REALTIME = 0

# /usr/include/time.h
#
# struct timespec
#  {
#    __time_t tv_sec;            /* Seconds.  */
#    long int tv_nsec;           /* Nanoseconds.  */
#  };
class timespec(ctypes.Structure):
    _fields_ = [("tv_sec", ctypes.c_long),
                ("tv_nsec", ctypes.c_long)]

librt = ctypes.CDLL(ctypes.util.find_library("rt"))

ts = timespec()
ts.tv_sec = int(time.mktime(datetime.datetime(*time_tuple[:6]).timetuple()))
ts.tv_nsec = time_tuple[6] * 1000000 # Millisecond to nanosecond

# http://linux.die.net/man/3/clock_settime
librt.clock_settime(CLOCK_REALTIME, ctypes.byref(ts))
</code></pre>

<p>if sys.platform==&lsquo;linux2&rsquo;:</p>

<pre><code>_linux_set_time(time_tuple)
</code></pre>

<p>elif  sys.platform==&lsquo;win32&rsquo;:</p>

<pre><code>_win_set_time(time_tuple)
</code></pre>

<p>```</p>

<p>可是没有可供同步用的服务器, 那时间怎么来呢?</p>

<p>1. 跑一个 web, 可以返回一个 <code>json</code> 的数据, 如:
```python</p>

<h1>!/usr/bin/env python</h1>

<h1>&ndash;<em>&ndash; coding: utf-8 &ndash;</em>&ndash;</h1>

<p>from <strong>future</strong> import unicode_literals
from datetime import datetime
from flask import Flask, jsonify</p>

<p>app = Flask(<strong>name</strong>)</p>

<p>@app.route(&lsquo;/api/get-time/&rsquo;)
def get_time():</p>

<pre><code>return jsonify(time=tuple(datetime.utcnow().timetuple()))
</code></pre>

<p>if <strong>name</strong> == &lsquo;<strong>main</strong>&rsquo;:</p>

<pre><code>app.run(debug=True, host='0.0.0.0')
</code></pre>

<p>```</p>

<p>客户端可以这样来获取和同步时间 (假设是 Windows 平台), 上面的 <code>set_time.py</code> 需要改一下:
```python set_time2.py
import sys
import datetime</p>

<p>def _win_set_time(time_tuple):</p>

<pre><code>'''time_tuple: 
year, month, day, hour, minute, second, day_of_week, day_of_year, is_dist
'''
import pywin32
# http://timgolden.me.uk/pywin32-docs/win32api__SetSystemTime_meth.html
# pywin32.SetSystemTime(year, month, dayOfWeek, day, hour, minute, second, millseconds)
tt = list(time_tuple)
tt.insert(2, tt[6]) # add day_of_week 
tt.insert(7, 0)  # set miliseconds
pywin32.SetSystemTime(*tt[:8])
</code></pre>

<p>def _linux_set_time(time_tuple):</p>

<pre><code>import ctypes
import ctypes.util
import time

# /usr/include/linux/time.h:
#
# define CLOCK_REALTIME                     0
CLOCK_REALTIME = 0

# /usr/include/time.h
#
# struct timespec
#  {
#    __time_t tv_sec;            /* Seconds.  */
#    long int tv_nsec;           /* Nanoseconds.  */
#  };
class timespec(ctypes.Structure):
    _fields_ = [("tv_sec", ctypes.c_long),
                ("tv_nsec", ctypes.c_long)]

librt = ctypes.CDLL(ctypes.util.find_library("rt"))

ts = timespec()
ts.tv_sec = int(time.mktime(datetime.datetime(*time_tuple[:6]).timetuple()))
ts.tv_nsec = time_tuple[6] * 1000000 # Millisecond to nanosecond

# http://linux.die.net/man/3/clock_settime
librt.clock_settime(CLOCK_REALTIME, ctypes.byref(ts))
</code></pre>

<p>def set_time(time_tuple):</p>

<pre><code>if sys.platform=='linux2':
    _linux_set_time(time_tuple)

elif  sys.platform=='win32':
    _win_set_time(time_tuple)
</code></pre>

<p>```</p>

<p>```python sync_time.py</p>

<h1>!/usr/bin/env python</h1>

<h1>&ndash;<em>&ndash; coding: utf-8 &ndash;</em>&ndash;</h1>

<p>from <strong>future</strong> import unicode_literals
import time
from datetime import datetime, timedelta
import requests
import set_time2</p>

<p>URL = &lsquo;<a href="http://a.b.c.d:5000/api/get-time/">http://a.b.c.d:5000/api/get-time/</a>&rsquo;
offset = time.timezone if (time.localtime().tm_isdst == 0) else time.altzone
LOCAL_TZ = offset / 60 / 60 * -1</p>

<p>def get_time():</p>

<pre><code>r = requests.get(URL)
json = r.json()
return json['time']
</code></pre>

<p>def sync_time(tz, ts):</p>

<pre><code>ts = get_time()
to_time = datetime(*ts[:6]) + timedelta(hours=LOCAL_TZ)
set_time2.set_time(to_time.timetuple())
</code></pre>

<p>if <strong>name</strong> == &lsquo;<strong>main</strong>&rsquo;:</p>

<pre><code>sync_time()
</code></pre>

<p>```</p>

<p>注意: 以上代码未经测试, 可能有错误.</p>

<p>2. 如果无法直接连接到提供时间的服务器呢?
比如有两个网络, 一个是测试电脑的内部网, 服务器在测试的通用网络.</p>

<p>可以使用一个可以连通两个网络的电脑上作为交换数据的中间人, 具体的是使用文件交换还是像 <code>socket</code> 之类的网络接口服务交换就随你的喜好了.</p>

<p>拙见.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flask-script 和 Gevent 结合使用]]></title>
    <link href="http://lixxu.me/blog/2014/06/10/use-gevent-with-flask-script/"/>
    <updated>2014-06-10T15:09:51+08:00</updated>
    <id>http://lixxu.me/blog/2014/06/10/use-gevent-with-flask-script</id>
    <content type="html"><![CDATA[<p>之前一直没用过 <code>flask-script</code>, 可是看了很多其他人的例子都在用这么个玩意. 碰巧手上有个现在做的一个应用, 所以打算用一下.</p>

<p>用了之后出现问题了: <code>python manage.py runserver</code> 使用的是默认的 <code>wsgi 服务器</code>, 而我在 windows 下一直使用 <code>gevent</code> 调试的.
看了下文档, 差不多就是这样:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>manage.py mark:40-53 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">env</span> <span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="n">coding</span><span class="p">:</span> <span class="n">utf</span><span class="o">-</span><span class="mi">8</span> <span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">from</span> <span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">future</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span> <span class="kn">import</span> <span class="nn">unicode_literals</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os.path</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">from</span> <span class="nn">app</span> <span class="kn">import</span> <span class="n">create_app</span><span class="p">,</span> <span class="n">db</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">app.models</span> <span class="kn">import</span> <span class="n">User</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">flask.ext.script</span> <span class="kn">import</span> <span class="n">Manager</span><span class="p">,</span> <span class="n">Shell</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">flask.ext.migrate</span> <span class="kn">import</span> <span class="n">Migrate</span><span class="p">,</span> <span class="n">MigrateCommand</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isfile</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">app</span><span class="o">.</span><span class="n">env</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c"># print(&#39;importing environment from app.env...&#39;)</span>
</span><span class='line'><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;app.env&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">f</span><span class="p">:</span>
</span><span class='line'>        <span class="k">if</span> <span class="ow">not</span> <span class="n">line</span><span class="o">.</span><span class="n">lstrip</span><span class="p">()</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&#39;#&#39;</span><span class="p">)</span> <span class="ow">and</span> <span class="s">&#39;=&#39;</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
</span><span class='line'>            <span class="n">items</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;=&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>            <span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="n">items</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">())]</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">items</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">app</span> <span class="o">=</span> <span class="n">create_app</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">getenv</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">APP_ENV</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span> <span class="ow">or</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">default</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span>
</span><span class='line'><span class="n">manager</span> <span class="o">=</span> <span class="n">Manager</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
</span><span class='line'><span class="n">migrate</span> <span class="o">=</span> <span class="n">Migrate</span><span class="p">(</span><span class="n">app</span><span class="p">,</span> <span class="n">db</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">make_shell_context</span><span class="p">():</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">return</span> <span class="nb">dict</span><span class="p">(</span><span class="n">app</span><span class="o">=</span><span class="n">app</span><span class="p">,</span> <span class="n">db</span><span class="o">=</span><span class="n">db</span><span class="p">,</span> <span class="n">User</span><span class="o">=</span><span class="n">User</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">manager</span><span class="o">.</span><span class="n">add_command</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">shell</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="n">Shell</span><span class="p">(</span><span class="n">make_context</span><span class="o">=</span><span class="n">make_shell_context</span><span class="p">))</span>
</span><span class='line'><span class="n">manager</span><span class="o">.</span><span class="n">add_command</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">db</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="n">MigrateCommand</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="nd">@manager.command</span>
</span><span class='line'><span class="k">def</span> <span class="nf">deploy</span><span class="p">():</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kn">from</span> <span class="nn">flask.ext.migrate</span> <span class="kn">import</span> <span class="n">upgrade</span>
</span><span class='line'>
</span><span class='line'><span class="n">upgrade</span><span class="p">()</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="nd">@manager.command</span>
</span><span class='line'><span class="k">def</span> <span class="nf">rungevent</span><span class="p">():</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">werkzeug.serving</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">werkzeug.debug</span> <span class="kn">import</span> <span class="n">DebuggedApplication</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">gevent.wsgi</span> <span class="kn">import</span> <span class="n">WSGIServer</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@werkzeug.serving.run_with_reloader</span>
</span><span class='line'><span class="k">def</span> <span class="nf">run</span><span class="p">():</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">debug</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'>    <span class="n">dapp</span> <span class="o">=</span> <span class="n">DebuggedApplication</span><span class="p">(</span><span class="n">app</span><span class="p">,</span> <span class="n">evalex</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="n">ws</span> <span class="o">=</span> <span class="n">WSGIServer</span><span class="p">((</span><span class="s">&#39;&#39;</span><span class="p">,</span> <span class="mi">5000</span><span class="p">),</span> <span class="n">dapp</span><span class="p">)</span>
</span><span class='line'>    <span class="n">ws</span><span class="o">.</span><span class="n">serve_forever</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="n">run</span><span class="p">()</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">if</span> <span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">name</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span> <span class="o">==</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">main</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;&amp;</span><span class="n">rsquo</span><span class="p">;:</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">manager</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后使用下面的命令就可以了:
<code>bash
python manage.py rungevent
</code></p>

<p>可是在 <code>rungevent</code> 里, 无论怎么传参数控制是否处在 <code>debug</code> 状态, 始终是 <code>autoreload</code>, 这可能是 <code>app.env</code> 里我设定了开发模式导致的.</p>

<p>不过, 算了, 生产环境我是用 <code>uwsgi</code> 的, 用不到这个玩意.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在 PyPi 上发布软件包]]></title>
    <link href="http://lixxu.me/blog/2014/06/09/how-to-register-pypi/"/>
    <updated>2014-06-09T14:33:10+08:00</updated>
    <id>http://lixxu.me/blog/2014/06/09/how-to-register-pypi</id>
    <content type="html"><![CDATA[<p>距上次发布软件包过去了很久, 都忘了操作步骤了, 今天碰巧发布一个小包, 放狗搜了一下, 记下来备忘:</p>

<p>来源: <a href="http://peterdowns.com/posts/first-time-with-pypi.html">http://peterdowns.com/posts/first-time-with-pypi.html</a></p>

<p>基本操作:</p>

<p>1. 准备好 <code>setup.py</code>, 提供一下 <code>setup.cfg</code></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>setup.cfg </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[metadata]</span>
</span><span class='line'><span class="na">description-file</span> <span class="o">=</span> <span class="s">README.md</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>2. 注册:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python setup.py register -r pypi</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>按提示做选择就可以了:</p>

<p><img class="<a" src="href="http://lixxu.qiniudn.com/pypi.png">http://lixxu.qiniudn.com/pypi.png</a>"></p>

<p>3. 上传, 一串字符滚过之后看到 <code>200</code> 就 OK 了</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python setup.py upload -r pypi</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><img class="<a" src="href="http://lixxu.qiniudn.com/pypi_upload.png">http://lixxu.qiniudn.com/pypi_upload.png</a>"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[程序员版<<泡沫>>]]></title>
    <link href="http://lixxu.me/blog/2014/05/19/coder-bubbles/"/>
    <updated>2014-05-19T13:25:19+08:00</updated>
    <id>http://lixxu.me/blog/2014/05/19/coder-bubbles</id>
    <content type="html"><![CDATA[<p>程序员版&lt;&lt;泡沫>> <a href="http://www.v2ex.com/t/113021#reply17">http://www.v2ex.com/t/113021#reply17</a></p>

<p><code>派森大法</code>, <code>烫烫烫烫烫烫烫烫烫烫烫烫烫烫</code>, &hellip;</p>

<p>视频在此, 加上弹幕才欢乐:</p>

<p><a href="http://www.acfun.com/v/ac1171084">http://www.acfun.com/v/ac1171084</a></p>

<object type="application/x-shockwave-flash" data="http://static.acfun.com/player/ACFlashPlayer.out.swf" width="550" height="348"><param name="allowfullscreen" value="true"><param name="allowscriptaccess" value="always"><param name="seamlesstabbing" value="true"><param name="wmode" value="direct"><param name="allowFullscreenInteractive" value="true"><param name="flashvars" value="type=page&url=http://www.acfun.com/v/ac1171084"></object>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pyodbc in 查询]]></title>
    <link href="http://lixxu.me/blog/2014/05/12/sql-in-operator-in-pyodbc/"/>
    <updated>2014-05-12T11:37:58+08:00</updated>
    <id>http://lixxu.me/blog/2014/05/12/sql-in-operator-in-pyodbc</id>
    <content type="html"><![CDATA[<p>参考链接, 看 <code>geographika</code> 的答案即可:</p>

<p><a href="http://stackoverflow.com/questions/4819356/sql-in-operator-using-pyodbc-and-sql-server">http://stackoverflow.com/questions/4819356/sql-in-operator-using-pyodbc-and-sql-server</a></p>

<p>记录一下如何在 <code>pyodbc</code> 中使用 <code>in</code> 查询:</p>

<p>```python</p>

<h1>!/usr/bin/env python</h1>

<p>import pyodbc</p>

<p>alist = [1, 2, 3]
sql = &lsquo;select * from table where field1 in (%s)&rsquo;
conn = pyodbc.connect(&hellip;)
cur = conn.cursor()
cur.execute(sql % (&lsquo;,&rsquo;.join(&lsquo;?&rsquo; * len(alist))), alist)
cur.fetchall()
conn.close()
```</p>
]]></content>
  </entry>
  
</feed>

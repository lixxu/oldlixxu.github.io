<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: python | 杂七杂八记一下]]></title>
  <link href="http://lixxu.me/blog/tags/python/atom.xml" rel="self"/>
  <link href="http://lixxu.me/"/>
  <updated>2014-05-26T16:33:25+08:00</updated>
  <id>http://lixxu.me/</id>
  <author>
    <name><![CDATA[Lix Xu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[pyodbc in 查询]]></title>
    <link href="http://lixxu.me/blog/2014/05/12/sql-in-operator-in-pyodbc/"/>
    <updated>2014-05-12T11:37:58+08:00</updated>
    <id>http://lixxu.me/blog/2014/05/12/sql-in-operator-in-pyodbc</id>
    <content type="html"><![CDATA[<p>参考链接, 看 <code>geographika</code> 的答案即可:</p>

<p><a href="http://stackoverflow.com/questions/4819356/sql-in-operator-using-pyodbc-and-sql-server">http://stackoverflow.com/questions/4819356/sql-in-operator-using-pyodbc-and-sql-server</a></p>

<p>记录一下如何在 <code>pyodbc</code> 中使用 <code>in</code> 查询:</p>

<p>```python</p>

<h1>!/usr/bin/env python</h1>

<p>import pyodbc</p>

<p>alist = [1, 2, 3]
sql = &lsquo;select * from table where field1 in (%s)&rsquo;
conn = pyodbc.connect(&hellip;)
cur = conn.cursor()
cur.execute(sql % (&lsquo;,&rsquo;.join(&lsquo;?&rsquo; * len(alist))), alist)
cur.fetchall()
conn.close()
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows下升级pip]]></title>
    <link href="http://lixxu.me/blog/2014/05/07/update-pip/"/>
    <updated>2014-05-07T09:08:11+08:00</updated>
    <id>http://lixxu.me/blog/2014/05/07/update-pip</id>
    <content type="html"><![CDATA[<p>在Windows下由于pip是个exe的可执行文件, 如果使用<code>pip install -U pip</code>的方式升级pip, 将会失败, 因为无法在执行pip时再覆盖它. 这时就需要使用导入包的方式:
<code>python -m pip install -U pip</code></p>

<p>记录下备忘.</p>

<p>Linux下是没有这个问题的, 暂时没研究是什么原理.</p>
]]></content>
  </entry>
  
</feed>